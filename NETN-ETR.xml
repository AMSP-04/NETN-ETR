<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<objectModel xsi:schemaLocation="http://standards.ieee.org/IEEE1516-2010 http://standards.ieee.org/downloads/1516/1516.2-2010/IEEE1516-DIF-2010.xsd" xmlns="http://standards.ieee.org/IEEE1516-2010" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <modelIdentification notes="netn-etr_1">
        <name>NETN-ETR</name>
        <type>FOM</type>
        <version>2.0 </version>
        <modificationDate>2020-09-03</modificationDate>
        <securityClassification>Not Classified</securityClassification>
        <purpose>The NETN ETR module provides a common standard interface for sending tasks to simulated entities represented in a federated distributed simulation. ETR contains common low level tasks that can easily be interpreted and executed by simulators that model the behavior of entities. It also defines a set of reports to provide status information, including the status of the tasks being executed by simulated entities.</purpose>
        <applicationDomain>Training</applicationDomain>
        <description>	
NATO Education and Training Network (NETN) Entity Tasking and Reports (ETR) Module. 
        
This module is a specification of how to represent simulation tasks requests provided to participants in a federated distributed simulation and simulator reports sent during the execution of tasks. The specification is based on IEEE 1516 High Level Architecture (HLA) Object Model Template (OMT) and primarily intended to support interoperability in a federated simulation (federation) based on HLA. An HLA OMT based Federation Object Model (FOM) is used to specify types of data and how it is encoded on the network. The NETN ETR FOM module is available as an XML file for use in HLA based federations.
        </description>
        <useLimitation> The NETN ETR FOM module is simulation oriented and focuses on tasks with a fine granularity: * It enables the transformation of command and control messages into tasks that can be executed by a simulator. * It defines status reports that can be used for producing command and control reports needed for decision-making. * It supports the modelling of simulated command and control interactions between federates in a distributed simulation, for example during a MRM disaggregation process. * It contains a comprehensive set of tasks and reports that can easily be interpreted and executed by simulators. * It reflects the capabilities commonly found in COTS Computer Generated Forces (CGF) tools, but it is independent of a specific COTS CGF tool, agent framework, or agent modelling paradigm. * It is independent of any specific doctrine or tactics. An entity in ETR can be either a physical entity (e.g. platform or lifeform) or an aggregate entity. If a task or report relates to only a physical entity or to only an aggregate entity, then this is specified in the definition of the task. In the definition of each task it is not specified how an entity (physical or aggregate) will / should perform the task. 	</useLimitation>
        <useHistory>NETN-LBML_v1.1.0 - Developed by MSG-106 and MSG-134 for NETN-FOM v2.0.</useHistory>
        <useHistory>v2.0.0 - Renamed and updated by MSG-163 for NETN-FOM v3.0</useHistory>
        <poc>
            <pocType>Release authority</pocType>
            <pocName>NATO Modelling and Simulation Group</pocName>
            <pocOrg>NATO Science and Technology Organization</pocOrg>
            <pocEmail>msg@cso.nato.int</pocEmail>
        </poc>
        <poc>
            <pocType>Primary author</pocType>
            <pocName>MSG-163 Evolution of NATO Standards for Federated Simulation</pocName>
            <pocOrg>NATO Modelling and Simulation Group</pocOrg>
            <pocEmail>msg@cso.nato.int</pocEmail>
        </poc>
        <poc>
            <pocType>Primary author</pocType>
            <pocName>MSG-134 NATO Distributed Simulation Architecture &amp; Design, Compliance Testing and Certification</pocName>
            <pocOrg>NATO Modelling and Simulation Group</pocOrg>
            <pocEmail>msg@cso.nato.int</pocEmail>
        </poc>
        <poc>
            <pocType>Primary author</pocType>
            <pocName>MSG-106 Enhanced CAX Architecture, Desing and Methodology</pocName>
            <pocOrg>NATO Modelling and Simulation Group</pocOrg>
            <pocEmail>msg@cso.nato.int</pocEmail>
        </poc>
        <reference>
            <type>Dependency</type>
            <identification>NETN-BASE</identification>
        </reference>
        <other>
Copyright Â© 2020 by NATO/OTAN. All rights reserved.
This work is licensed under a Creative Commons Attribution-NoDerivatives 4.0 International License.

Above license gives you the right to use and redistribute this FOM Module (XML file and Documentation) in its entirety without modification. You are also allowed to develop your own new FOM Modules (in separate XML files and separate documentation) that build-on/extends this FOM module by reference. You are NOT allowed to modify this FOM Module or its documentation without prior permission by the NATO Modelling and Simulation Group.</other>
        <glyph type="png" height="48" width="48" alt="">iVBORw0KGgoAAAANSUhEUgAAADAAAAAwCAYAAABXAvmHAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAACXBIWXMAABcSAAAXEgFnn9JSAAABWWlUWHRYTUw6Y29tLmFkb2JlLnhtcAAAAAAAPHg6eG1wbWV0YSB4bWxuczp4PSJhZG9iZTpuczptZXRhLyIgeDp4bXB0az0iWE1QIENvcmUgNS40LjAiPgogICA8cmRmOlJERiB4bWxuczpyZGY9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIvMjItcmRmLXN5bnRheC1ucyMiPgogICAgICA8cmRmOkRlc2NyaXB0aW9uIHJkZjphYm91dD0iIgogICAgICAgICAgICB4bWxuczp0aWZmPSJodHRwOi8vbnMuYWRvYmUuY29tL3RpZmYvMS4wLyI+CiAgICAgICAgIDx0aWZmOk9yaWVudGF0aW9uPjE8L3RpZmY6T3JpZW50YXRpb24+CiAgICAgIDwvcmRmOkRlc2NyaXB0aW9uPgogICA8L3JkZjpSREY+CjwveDp4bXBtZXRhPgpMwidZAAAKkElEQVRoBeVYeWxWWRV/X0sLpYR9K4V2oCwBBFoKQ9hSwhoSkiLLHzNm/mEGRAwRMSgJu0gEUyRmIpGwRs1IoAFEdgkQYFpZZNGUxcI0QFlLoU2h0G9519/vfO+8ef369WsR0Jl4kt+795577rnnnLs/y/o/Jh98j/+2+k/D6QCJqeaF8U3/xHkMTPfkvxVOqPGdYPjvgBrgB44T3lEhS0dGU0fsf5fofJ8AE54CxoNZjlkJSIloo0FeEwcaCBT/e8TOSVMBGh8A/E6e5Y+BSGoKBhGNGBANSrT6OjxjTB3Ho0WqTkOHwcY20Ar4O5DhlG2fz9cEyunMspYtWyYmJSV92LRp0xS/35+MOishIeHl69ev79fU1BRVVlYWQO5LoAIgMTDUS9RLNB667JUrV8atWLHCIM+gxSQ6F+mxOrwTdVSgIxDq2LGj6dGjh4ED5EcF6yjTuXPnryDzK+ADQKne0dDII22mwsiLLWqQ8jUlXz3UqcMI0aEg8Aki8Hsosdu0aeNr27at7/bt26wXw9PS0qypU6f6MBJWXFycVVVVZe3fv9/cvXuX9dTn69mzp1VeXl7x/PnzPJR/CbA966jfJfSRgL4CSIe/ePHijy1atFiK8p9OnjzZZMyYMSFXMEqGTiRG8NWZ0eAbGEqDxPDRo0ebrVu3mitXrpinT5+aR48emTVr1pgNGzYYGCq8y5cvm+3bt9ujRo2ikVxDJj09nTpOAWkASfuwaDwZSLOLi4vL5s6day5cuEBnZpAPijoAqmABBL4Cfg3kAl0A0mCgJCMjgx2HOnToYPbs2WMQSej9mk6dOsV6AZ3yEmX37dtnkpOT6Ygfo0G5UmAgQOKaUuM/xOg+mzJlCmWq2d/FixepTp2QBvrReZgCRhngGoH8QyAfKFXjZ8+ebe7du+faZtu2CQQYIGOOHDnitj137pzwWBcKhSTPD6cUowqdNY7OB8j3BIQgkg3jyydPnkwZ/8iRI5m+BszDhw9rUN9dBJ0Ph0OH5AsKAa8ADnXIWfXG6SiwatUqU11dTTvEKBpGB9TAY8eOsb3g0qVLrpxk8AkGg5J99eqVWb58OeVquMD79u37D+Q5bbIwbSonTpzIOv+gQYOYcsQM5j/bLkK+FqnxZG4A2IDzW40Pdu/enbtOaMGCBQbbIpW4hkgBH3Xg6NGjbC9QByhz4sQJU1JSwqzBNispdS1cuNA1cMeOHXtKS0tvaeQHDhzo1p0+fZptfgbdUcnrxBpIqBGyTbI8YsQI8+TJE+lYoygF56MOeKfQ1atXpfbgwYOib9KkSQYGCk+d4MKn/iVLloSKioqMY3zAG/kzZ86wzU8cy33IR27zUuVl/pxKCewWsttwcZKiGU9+NAcwFUxBQYHoycrKknT8+PHmwYMHbOKuG8qdPXvWTJ8+nVMlFCPy9RovHuBDJ3Q0ftGtWzd2GpwzZ4477Jzv0UgdOHz4sBiKdoaG0djs7GzhDRkyRNIJEybU2gQ4Ktjbpc5rPJ0CNRh59CVGcyciksjANeD7jgMBLkySGimFiI/WeR24du2aSN25c0emINSaoUOHiqFjx46VM4M7kp7iAwYMYB0PKePM+Z8iT2ow8mExz7d9+/Z/RdF06dIloEOuRkbYLkWtO3TokBjIthwBpfv377tODB48WGTGjRtnhg0bJvl+/fox5XS1nd2mUZGHvEvpyH0X4F3ly9TUVDkx582bZ+uCq2/60Eh1wLuNRu46PDtwGovBmZmZkqIv06tXL80Hjx8/zh3rNvhy/4FqPaPAqk26aHlt2AtUA6rIYOtk3s7Ly9Mg1puqY9zbFy9e7OpYvXq1e2bo4udIaNT79+/PEXblMf1CvDuh3wrcanshJTXoQAsI6enr5wUK5UDv3r1l99m1a5cYrhGO5oXW6TWCVwTcPMUwZy7L7qVyHAneodCP6dOnj6Rse/78eemzdevWNhZ8FuqtmTNnRnVAo08ZKqhkBsQFxLomcER2o2bN3Jss62MSLm9Sj/VjEaQbN25IGh8ftgNOWF27drV27txpDR8+3Lp586aFdWPl5ORYcExkcUX34d4jNu7evVt40T7qRDIqHwMSCefqEMTVQaLBmyZJp0msEeCiVT1MO3XqJOWNGzcaXK2lKUdB7023bt0yusOxEn3JDoSzh2/u7wCkqCPACt3vmfK5+FvgHFAFuFfmZcuWRbO5Dk8d5NUZp6rhtYN6FDNmzDAYDbedrgllsP3SpUvlzoO70SO0SwVIGuhwqYEvhTOAj1JSUjieZtq0aSGNnhqpncZKKcvrNE9e6lHk5+e7I0An1BH2kZubKzsfzp8LkNfIa6DBqp/4FqjlaatWrfKaN2/Ojv28o5B0ETZkuLf+2bNnZu3ata4D0GcWLVrkXifUAR56qAvwiYpDlL9uSLSpUQ6IND7cUkmtgbPOVhrctGmT2NTYEaAc4XWYt1EExXWEr7rr16+7vm7evFkOMeeRwylN0kdWuNTAV4X596EQMHj3ypzEnsyHhHTmNcrtPUbGK88rxfz5810ntmzZIi15NiDy0hf6LEbf3FhItWZFmBX9q/OtA6r564S/L+TPg/OQMevXr3fNbOxIaAPvaPBU37t3r+grKysTkXXr1tEpvzPi+mDRgEa32MNVL/nb8J+AKGMKJ0LYv4M4lCQ6zh1FpsabOkFLvaOhzjmHnx9XF4M/GdfRLw9WktoVLsX4qmBnyPBtSgf4pBSjWcawksc92taHujeqakxjUi5adYQvNu0Hv2iYnwiQGh39sPjXDT4Bg4pcYBQ4pY5hW1WezUeKEo0hYo2IOquGs21hYSH1yWHp6F6BMkmnc7jUyK93q+LZfQb4ETAUkN8cSD93Ll5yWm7bts1UVFSoH5J6Da3PMfxiNFy80EeEHJ2/QV7Ja4vyGpVqQ91KazXC/YUPnWLccQz+0cj04huX793Hjx83OAJ8Tx84cEDfvKZdu3ZB6oLOq56OGh19NdbTVrLkUymJ85B5rhGekJmYToUIdbPExEQbiy6upKQEbCsE58ysWbPi8ByMg2EWXljkW4i2hYPMwuPexh8HG5c16o/HbmPhkRTCT9946CyHzmzw77AO4Ai/FbETQkkX1I/BoENy3CO1uXc7Bw/5hMxpJ1+HR1nd7x1ZmY7Ifw8gaV/hUoyv18AYYq4jNGYfkAtw+jBy/AlFPX+BUQm4duQgn8R9/uXLl6IfvxANRguivio8dgrw35S/KQegzL9bNJbB4BrbCnwGcLQZhHdGOifToPE5QEd4wOkobENeif8sDc4Ng5PbBoLMg3cT6O0IuQclyl49/0KZ1xeSbuvh0lt+1YG+0MMrLg1S/CFCNw+gu049R0md3OLIqS6+dIocOd77VV9mhJxTfPtEp1sqVH0OsMN8j1pOBY3an516RlfXw6eOLKeKbsnUdQ2grr8BkwDVgey7J3WCmocAetxrVHXx8d8ljdIfBEzdX+fIk9QJjuoPAW3LuvdKNNYbJW9ejciBDB1QcG6rwd4gqOOoFtL2Wm4wjVTQYAMIqFHalmUlzVeAwXnN6wfxBXAFoPEqg6zkGQDqIv+d7jzQ9x+RN8JeBfXxvTJvnH8vSmEF9Xqn1jcmum8coffd4N+JGjk80q6rSgAAAABJRU5ErkJggg==</glyph>
    </modelIdentification>
    <objects>
        <objectClass>
            <name>HLAobjectRoot</name>
            <objectClass notes="COPY-RPRnoteBase1 COPY-RPRnoteBase1">
                <name>BaseEntity</name>
                <sharing>Subscribe</sharing>
                <semantics>A base class of aggregate and discrete scenario domain participants. The BaseEntity class is characterized by being located at a particular location in space and independently movable, if capable of movement at all. It specifically excludes elements normally considered to be a component of another element. The BaseEntity class is intended to be a container for common attributes for entities of this type. Since it lacks sufficient class specific attributes that are required for simulation purposes, federates cannot publish objects of this class. Certain simulation management federates, e.g. viewers, may subscribe to this class. Simulation federates will normally subscribe to one of the subclasses, to gain the extra information required to properly simulate the entity.</semantics>
                <attribute>
                    <name>Activity</name>
                    <dataType>AggregateMissionEnum16</dataType>
                    <updateType>NA</updateType>
                    <updateCondition></updateCondition>
                    <ownership>DivestAcquire</ownership>
                    <sharing>PublishSubscribe</sharing>
                    <transportation>HLAreliable</transportation>
                    <order>Receive</order>
                    <semantics></semantics>
                </attribute>
                <attribute>
                    <name>SupportedTasks</name>
                    <dataType>ArrayOfTaskTypes</dataType>
                    <updateType>NA</updateType>
                    <updateCondition></updateCondition>
                    <ownership>DivestAcquire</ownership>
                    <sharing>PublishSubscribe</sharing>
                    <transportation>HLAreliable</transportation>
                    <order>Receive</order>
                    <semantics></semantics>
                </attribute>
                <objectClass>
                    <name>PhysicalEntity</name>
                    <objectClass>
                        <name>Platform</name>
                        <sharing>Subscribe</sharing>
                        <semantics>A physical object under the control of armed forces upon which sensor, communication, or weapon systems may be mounted.</semantics>
                        <attribute>
                            <name>CurrentTaskProgresses</name>
                            <dataType>ArrayOfTaskProgress</dataType>
                            <updateType>NA</updateType>
                            <updateCondition></updateCondition>
                            <ownership>NoTransfer</ownership>
                            <sharing>PublishSubscribe</sharing>
                            <transportation>HLAreliable</transportation>
                            <order>Receive</order>
                            <semantics>Optional. Array of current task progresses</semantics>
                        </attribute>
                        <attribute>
                            <name>CurrentTaskDefinitions</name>
                            <dataType>ArrayOfTaskDefinitions</dataType>
                            <updateType>NA</updateType>
                            <updateCondition></updateCondition>
                            <ownership>NoTransfer</ownership>
                            <sharing>PublishSubscribe</sharing>
                            <transportation>HLAreliable</transportation>
                            <order>Receive</order>
                            <semantics>Optional. Array of current tasks</semantics>
                        </attribute>
                        <attribute>
                            <name>PreviousTasks</name>
                            <dataType>ArrayOfTaskDefinitions</dataType>
                            <updateType>NA</updateType>
                            <updateCondition></updateCondition>
                            <ownership>NoTransfer</ownership>
                            <sharing>PublishSubscribe</sharing>
                            <transportation>HLAreliable</transportation>
                            <order>Receive</order>
                            <semantics>Optional. Array of completed or cancelled tasks.</semantics>
                        </attribute>
                        <attribute>
                            <name>PlannedTasks</name>
                            <dataType>ArrayOfTaskDefinitions</dataType>
                            <updateType>NA</updateType>
                            <updateCondition></updateCondition>
                            <ownership>NoTransfer</ownership>
                            <sharing>PublishSubscribe</sharing>
                            <transportation>HLAreliable</transportation>
                            <order>Receive</order>
                            <semantics>Optional. Array of all planned tasks.</semantics>
                        </attribute>
                    </objectClass>
                    <objectClass>
                        <name>Lifeform</name>
                        <sharing>Subscribe</sharing>
                        <semantics>A living military platform (human or not).</semantics>
                        <attribute>
                            <name>CurrentTaskProgresses</name>
                            <dataType>ArrayOfTaskProgress</dataType>
                            <updateType>NA</updateType>
                            <updateCondition></updateCondition>
                            <ownership>NoTransfer</ownership>
                            <sharing>PublishSubscribe</sharing>
                            <transportation>HLAreliable</transportation>
                            <order>Receive</order>
                            <semantics>Optional. Array of current task progresses</semantics>
                        </attribute>
                        <attribute>
                            <name>CurrentTaskDefinitions</name>
                            <dataType>ArrayOfTaskDefinitions</dataType>
                            <updateType>NA</updateType>
                            <updateCondition></updateCondition>
                            <ownership>NoTransfer</ownership>
                            <sharing>PublishSubscribe</sharing>
                            <transportation>HLAreliable</transportation>
                            <order>Receive</order>
                            <semantics>Optional. Array of current tasks</semantics>
                        </attribute>
                        <attribute>
                            <name>PreviousTasks</name>
                            <dataType>ArrayOfTaskDefinitions</dataType>
                            <updateType>NA</updateType>
                            <updateCondition></updateCondition>
                            <ownership>NoTransfer</ownership>
                            <sharing>PublishSubscribe</sharing>
                            <transportation>HLAreliable</transportation>
                            <order>Receive</order>
                            <semantics>Optional. Array of completed or cancelled tasks.</semantics>
                        </attribute>
                        <attribute>
                            <name>PlannedTasks</name>
                            <dataType>ArrayOfTaskDefinitions</dataType>
                            <updateType>NA</updateType>
                            <updateCondition></updateCondition>
                            <ownership>NoTransfer</ownership>
                            <sharing>PublishSubscribe</sharing>
                            <transportation>HLAreliable</transportation>
                            <order>Receive</order>
                            <semantics>Optional. Array of all planned tasks.</semantics>
                        </attribute>
                    </objectClass>
                </objectClass>
                <objectClass>
                    <name>AggregateEntity</name>
                    <sharing>PublishSubscribe</sharing>
                    <semantics>A group of one or more separate objects that operate together as part of an organization. These objects may be discrete, may be other aggregate objects, or may be a mixture of both.</semantics>
                    <attribute>
                        <name>CurrentTaskProgresses</name>
                        <dataType>ArrayOfTaskProgress</dataType>
                        <updateType>NA</updateType>
                        <updateCondition></updateCondition>
                        <ownership>NoTransfer</ownership>
                        <sharing>PublishSubscribe</sharing>
                        <transportation>HLAreliable</transportation>
                        <order>Receive</order>
                        <semantics>Optional. Array of current task progresses</semantics>
                    </attribute>
                    <attribute>
                        <name>CurrentTaskDefinitions</name>
                        <dataType>ArrayOfTaskDefinitions</dataType>
                        <updateType>NA</updateType>
                        <updateCondition></updateCondition>
                        <ownership>NoTransfer</ownership>
                        <sharing>PublishSubscribe</sharing>
                        <transportation>HLAreliable</transportation>
                        <order>Receive</order>
                        <semantics>Optional. Array of current tasks</semantics>
                    </attribute>
                    <attribute>
                        <name>PreviousTasks</name>
                        <dataType>ArrayOfTaskDefinitions</dataType>
                        <updateType>NA</updateType>
                        <updateCondition></updateCondition>
                        <ownership>NoTransfer</ownership>
                        <sharing>PublishSubscribe</sharing>
                        <transportation>HLAreliable</transportation>
                        <order>Receive</order>
                        <semantics>Optional. Array of completed or cancelled tasks.</semantics>
                    </attribute>
                    <attribute>
                        <name>PlannedTasks</name>
                        <dataType>ArrayOfTaskDefinitions</dataType>
                        <updateType>NA</updateType>
                        <updateCondition></updateCondition>
                        <ownership>NoTransfer</ownership>
                        <sharing>PublishSubscribe</sharing>
                        <transportation>HLAreliable</transportation>
                        <order>Receive</order>
                        <semantics>Optional. Array of all planned tasks.</semantics>
                    </attribute>
                </objectClass>
            </objectClass>
            <objectClass>
                <name>Task</name>
                <sharing>Neither</sharing>
                <semantics>Object to represent a task independently in the federation when needed.</semantics>
                <attribute>
                    <name>TaskDefinition</name>
                    <dataType>TaskDefinition</dataType>
                    <updateType>NA</updateType>
                    <updateCondition></updateCondition>
                    <ownership>NoTransfer</ownership>
                    <sharing>PublishSubscribe</sharing>
                    <transportation>HLAreliable</transportation>
                    <order>Receive</order>
                    <semantics>Required. Definition description of the task represented.</semantics>
                </attribute>
                <attribute>
                    <name>TaskProgress</name>
                    <dataType>TaskProgress</dataType>
                    <updateType>NA</updateType>
                    <updateCondition></updateCondition>
                    <ownership>NoTransfer</ownership>
                    <sharing>PublishSubscribe</sharing>
                    <transportation>HLAreliable</transportation>
                    <order>Receive</order>
                    <semantics>Required. Progress description of the task represented.</semantics>
                </attribute>
            </objectClass>
        </objectClass>
    </objects>
    <interactions>
        <interactionClass>
            <name>HLAinteractionRoot</name>
            <interactionClass>
                <name>ETR_Root</name>
                <sharing>Neither</sharing>
                <transportation>HLAreliable</transportation>
                <order>Receive</order>
                <semantics>Root interaction class for the Entitiy Tasking and Reporting (ETR) interaction classes.</semantics>
                <interactionClass>
                    <name>ETR_Report</name>
                    <sharing>Neither</sharing>
                    <transportation>HLAreliable</transportation>
                    <order>Receive</order>
                    <semantics>A base interaction class for more specialized report interaction classes.</semantics>
                    <parameter>
                        <name>ReportId</name>
                        <dataType>UUID</dataType>
                        <semantics>Required. Uniqie identifier for the report.</semantics>
                    </parameter>
                    <parameter>
                        <name>When</name>
                        <dataType>Datetime18</dataType>
                        <semantics>Required. Date and time when the reported status was valid.</semantics>
                    </parameter>
                    <parameter>
                        <name>CommunicationNetworkIds</name>
                        <dataType>ArrayOfText64</dataType>
                        <semantics>Optional. Reference to communication networks (NETN-COM) used to transfer report messages. If not provided, the report transmission should not be modelled and federates should receive and act on the report messages directly.</semantics>
                    </parameter>
                    <parameter>
                        <name>Comments</name>
                        <dataType>HLAunicodeString</dataType>
                        <semantics>Optional. Any additional comments associated with the report.</semantics>
                    </parameter>
                    <interactionClass>
                        <name>InWeaponRangeReport</name>
                        <sharing>PublishSubscribe</sharing>
                        <transportation>HLAreliable</transportation>
                        <order>Receive</order>
                        <semantics>Report on a unit's ability to reach specific targets with its weapon systems.</semantics>
                        <parameter>
                            <name>Observer</name>
                            <dataType>UUID</dataType>
                            <semantics>Required. Reference to the entity that observed another entity in range of its weapons.</semantics>
                        </parameter>
                        <parameter>
                            <name>WeaponType</name>
                            <dataType>EntityTypeStruct</dataType>
                            <semantics>Required. The type of the weapon that is in range.</semantics>
                        </parameter>
                        <parameter>
                            <name>EntitiesInWeaponRange</name>
                            <dataType>ArrayOfUuid</dataType>
                            <semantics>Required. Reference to entities in rage of the weapon.</semantics>
                        </parameter>
                    </interactionClass>
                    <interactionClass>
                        <name>SpotReport</name>
                        <sharing>PublishSubscribe</sharing>
                        <transportation>HLAreliable</transportation>
                        <order>Receive</order>
                        <semantics>Report on a unit's awareness of spotted entities.</semantics>
                        <parameter>
                            <name>Observer</name>
                            <dataType>UUID</dataType>
                            <semantics>Required. Entity that observed the enemy (or neutral/unknown entity) and sends the spot report.</semantics>
                        </parameter>
                        <parameter>
                            <name>IdentificationLevel</name>
                            <dataType>IdentificationLevelEnum8</dataType>
                            <semantics>Required. The identification level of the entit(y)(ies) spotted.</semantics>
                        </parameter>
                        <parameter>
                            <name>SpottedEntities</name>
                            <dataType>ArrayOfSpottedEntities</dataType>
                            <semantics>Required. Spotted entities at the time specified in the parameter 'When'.</semantics>
                        </parameter>
                        <interactionClass>
                            <name>SensorReport</name>
                            <sharing>PublishSubscribe</sharing>
                            <transportation>HLAreliable</transportation>
                            <order>Receive</order>
                            <semantics>Report on a unit's sensor detection of entities.</semantics>
                            <parameter>
                                <name>SensorType</name>
                                <dataType>EntityTypeStruct</dataType>
                                <semantics>Required. The type of the sensor that detected the entities.</semantics>
                            </parameter>
                        </interactionClass>
                    </interactionClass>
                    <interactionClass>
                        <name>StatusReport</name>
                        <sharing>Neither</sharing>
                        <transportation>HLAreliable</transportation>
                        <order>Receive</order>
                        <semantics>Report on a unit's own (perceived) state. This report should be generated with a frequency specified in the federation agreements.</semantics>
                        <parameter>
                            <name>EntityId</name>
                            <dataType>UUID</dataType>
                            <semantics>Required. The entity that is reported about.</semantics>
                        </parameter>
                        <interactionClass>
                            <name>DamageStatusReport</name>
                            <sharing>PublishSubscribe</sharing>
                            <transportation>HLAreliable</transportation>
                            <order>Receive</order>
                            <semantics>Report on a unit's damage status.</semantics>
                            <parameter>
                                <name>DamageType</name>
                                <dataType>DamageStatusEnhancedEnum32</dataType>
                                <semantics>Required. Damage state of the reported entity.</semantics>
                            </parameter>
                        </interactionClass>
                        <interactionClass>
                            <name>PositionStatusReport</name>
                            <sharing>PublishSubscribe</sharing>
                            <transportation>HLAreliable</transportation>
                            <order>Receive</order>
                            <semantics>Report on a unit's position, speed, and heading.</semantics>
                            <parameter>
                                <name>Position</name>
                                <dataType>WorldLocationStruct</dataType>
                                <semantics>Required. Position of the entity at the specified time.</semantics>
                            </parameter>
                            <parameter>
                                <name>Heading</name>
                                <dataType>AngleRadianFloat32</dataType>
                                <semantics>Required. Heading of the entity.</semantics>
                            </parameter>
                            <parameter>
                                <name>Speed</name>
                                <dataType>VelocityMeterPerSecondFloat32</dataType>
                                <semantics>Required. Speed of the entity.</semantics>
                            </parameter>
                        </interactionClass>
                        <interactionClass>
                            <name>ResourceStatusReport</name>
                            <sharing>PublishSubscribe</sharing>
                            <transportation>HLAreliable</transportation>
                            <order>Receive</order>
                            <semantics>Report on a unit's remaining amount resources.</semantics>
                            <parameter>
                                <name>Resource</name>
                                <dataType>SupplyStruct</dataType>
                                <semantics>Required. The type of resource and remaining quantity.</semantics>
                            </parameter>
                        </interactionClass>
                        <interactionClass>
                            <name>UnderAttackStatusReport</name>
                            <sharing>PublishSubscribe</sharing>
                            <transportation>HLAreliable</transportation>
                            <order>Receive</order>
                            <semantics>Report from a unit that it is under attack.</semantics>
                            <parameter>
                                <name>FromDirection</name>
                                <dataType>AngleRadianFloat32</dataType>
                                <semantics>Required. Direction from which the entity is attacked, between 0..2Ï or -1 when not specified.</semantics>
                            </parameter>
                            <parameter>
                                <name>Severeness</name>
                                <dataType>AttackTypeEnum32</dataType>
                                <semantics>Required. Severeness of the attack upon the reporting entity.</semantics>
                            </parameter>
                        </interactionClass>
                    </interactionClass>
                </interactionClass>
                <interactionClass>
                    <name>ETR_SimCon</name>
                    <sharing>Neither</sharing>
                    <transportation>HLAreliable</transportation>
                    <order>Receive</order>
                    <semantics>A base interaction class for EXCON Task interaction classes.</semantics>
                    <parameter>
                        <name>TaskId</name>
                        <dataType>UUID</dataType>
                        <semantics>Required. Uniqie identifier for the simulation control task.</semantics>
                    </parameter>
                    <parameter>
                        <name>Taskee</name>
                        <dataType>UUID</dataType>
                        <semantics>Required. Reference to the entity that should execute the task.</semantics>
                    </parameter>
                    <parameter>
                        <name>Tasker</name>
                        <dataType>Callsign</dataType>
                        <semantics>Optional. Indentifies the commander of the task.</semantics>
                    </parameter>
                    <parameter>
                        <name>MainTaskId</name>
                        <dataType>UUID</dataType>
                        <semantics>Optional. Unique ID of the main task.</semantics>
                    </parameter>
                    <parameter>
                        <name>PreviousTaskId</name>
                        <dataType>UUID</dataType>
                        <semantics>Optional. Unique ID of the previous task.</semantics>
                    </parameter>
                    <parameter>
                        <name>NextTaskId</name>
                        <dataType>UUID</dataType>
                        <semantics>Optional. Unique ID of the next task.</semantics>
                    </parameter>
                    <interactionClass>
                        <name>CapabilitiesSupported</name>
                        <sharing>PublishSubscribe</sharing>
                        <transportation>HLAreliable</transportation>
                        <order>Receive</order>
                        <semantics>Provides the set of ETR_Task, ETR_SimCon and ETR_Report interactions that the federate modelling the entity supports. This interaction is in response to a QuerySupportedCapabilities.</semantics>
                        <parameter>
                            <name>CapabilityNames</name>
                            <dataType>ArrayOfNames</dataType>
                            <semantics>Required. Array of task and report names that the entity supports; the names match with the FOM class names of NETN-ETR Tasks, Reports and SimCon interactions.</semantics>
                        </parameter>
                    </interactionClass>
                    <interactionClass>
                        <name>MagicMove</name>
                        <sharing>PublishSubscribe</sharing>
                        <transportation>HLAreliable</transportation>
                        <order>Receive</order>
                        <semantics>A simulation control task that instructs the entity to immediately jump to the specified location and update the new position and heading.</semantics>
                        <parameter>
                            <name>Location</name>
                            <dataType>WorldLocationStruct</dataType>
                            <semantics>Required. Location of the entity.</semantics>
                        </parameter>
                        <parameter>
                            <name>Heading</name>
                            <dataType>AngleRadianFloat32</dataType>
                            <semantics>Required. Heading of the entity.</semantics>
                        </parameter>
                        <parameter>
                            <name>LocationUuid</name>
                            <dataType>UUID</dataType>
                            <semantics>Optional. The new location for the entity. Refered by a UUID.</semantics>
                        </parameter>
                    </interactionClass>
                    <interactionClass>
                        <name>MagicResource</name>
                        <sharing>PublishSubscribe</sharing>
                        <transportation>HLAreliable</transportation>
                        <order>Receive</order>
                        <semantics>A simulation control task that instructs the entity to set amount of available resources immediately</semantics>
                        <parameter>
                            <name>Resource</name>
                            <dataType>SupplyStruct</dataType>
                            <semantics>Required. Defines the resource type that will get a new quantity value.</semantics>
                        </parameter>
                    </interactionClass>
                    <interactionClass>
                        <name>QuerySupportedCapabilities</name>
                        <sharing>PublishSubscribe</sharing>
                        <transportation>HLAreliable</transportation>
                        <order>Receive</order>
                        <semantics>Query which tasks, reports and SimCon actions that an entity supports. The queried entity shall respond with a CapabilitiesSupported message.</semantics>
                    </interactionClass>
                </interactionClass>
                <interactionClass>
                    <name>ETR_Task</name>
                    <sharing>Neither</sharing>
                    <transportation>HLAreliable</transportation>
                    <order>Receive</order>
                    <semantics>A base interaction class for more specialized task interaction classes.</semantics>
                    <parameter>
                        <name>TaskId</name>
                        <dataType>UUID</dataType>
                        <semantics>Required. Uniqie identifier for the task.</semantics>
                    </parameter>
                    <parameter>
                        <name>Taskee</name>
                        <dataType>UUID</dataType>
                        <semantics>Required. Reference to the entity that will execute the task.</semantics>
                    </parameter>
                    <parameter>
                        <name>Tasker</name>
                        <dataType>Callsign</dataType>
                        <semantics>Optional. Callsign of the commander of the task. If missing, the commander is undefined.</semantics>
                    </parameter>
                    <parameter>
                        <name>StartWhen</name>
                        <dataType>Datetime18</dataType>
                        <semantics>Required. Time when the task execution should start. Use the value 00000000000000.000 to indicate that the time is undefined.</semantics>
                    </parameter>
                    <parameter>
                        <name>Why</name>
                        <dataType>HLAunicodeString</dataType>
                        <semantics>Optional. A text describing the reason for this task.</semantics>
                    </parameter>
                    <parameter>
                        <name>TaskMode</name>
                        <dataType>TaskModeEnum8</dataType>
                        <semantics>Required. Determines the task mode.</semantics>
                    </parameter>
                    <parameter>
                        <name>CommunicationNetworkIds</name>
                        <dataType>ArrayOfText64</dataType>
                        <semantics>Optional. Reference to communication networks (NETN-COM) used to transfer tasking messages. If not provided, the task transmission should not be modelled and federates should receive and act on the task messages directly.</semantics>
                    </parameter>
                    <parameter>
                        <name>MainTaskId</name>
                        <dataType>UUID</dataType>
                        <semantics>Optional. Unique ID of the main task.</semantics>
                    </parameter>
                    <parameter>
                        <name>PreviousTaskId</name>
                        <dataType>UUID</dataType>
                        <semantics>Optional. Unique ID of the previous task.</semantics>
                    </parameter>
                    <parameter>
                        <name>NextTaskId</name>
                        <dataType>UUID</dataType>
                        <semantics>Optional. Unique ID of the next task.</semantics>
                    </parameter>
                    <parameter>
                        <name>Activity</name>
                        <dataType>AggregateMissionEnum16</dataType>
                        <semantics>Optional. Specifies the activity for the entity that will execute the task. If not specified, left up to creator.</semantics>
                    </parameter>
                    <interactionClass>
                        <name>ClearEngineering</name>
                        <sharing>PublishSubscribe</sharing>
                        <transportation>HLAreliable</transportation>
                        <order>Receive</order>
                        <semantics>Tasking of an entity to clear any SeObject with the given UUID. The tasked entity should be within a certain distance (tolerance specified in the federation agreement) of one of the points of the geometry of the obstacle.</semantics>
                        <parameter>
                            <name>UniqueId</name>
                            <dataType>UUID</dataType>
                            <semantics>Required. Reference to the Obstacle to clear.</semantics>
                        </parameter>
                        <parameter>
                            <name>Duration</name>
                            <dataType>TimeMillisecondInt64</dataType>
                            <semantics>Optional. Time to clear the SeObject. If unspecified, this is decided by federate accepting the task.</semantics>
                        </parameter>
                    </interactionClass>
                    <interactionClass>
                        <name>Dismount</name>
                        <sharing>PublishSubscribe</sharing>
                        <transportation>HLAreliable</transportation>
                        <order>Receive</order>
                        <semantics>Tasking of an entity to dismount from a mounted position. When the task is completed, the tasked entity is no longer attached to or embarked in another entity.</semantics>
                    </interactionClass>
                    <interactionClass>
                        <name>DisruptCommunication</name>
                        <sharing>PublishSubscribe</sharing>
                        <transportation>HLAreliable</transportation>
                        <order>Receive</order>
                        <semantics>Tasking of an entity to introduce a communication network disruption.</semantics>
                        <parameter>
                            <name>AffectedCommunicationNetwork</name>
                            <dataType>Text64</dataType>
                            <semantics>Required. Reference to the affected Communication Network. If not provided all communication networks are affected.</semantics>
                        </parameter>
                        <parameter>
                            <name>AffectedArea</name>
                            <dataType>GeodeticQuadrangle</dataType>
                            <semantics>Required. Area affected by disruption.</semantics>
                        </parameter>
                        <parameter>
                            <name>DisruptionEnabled</name>
                            <dataType>HLAboolean</dataType>
                            <semantics>Required. Disruption enabled or disabled. Default is True = Enabled.</semantics>
                        </parameter>
                    </interactionClass>
                    <interactionClass>
                        <name>Engineering</name>
                        <sharing>PublishSubscribe</sharing>
                        <transportation>HLAreliable</transportation>
                        <order>Receive</order>
                        <semantics>Tasking of an entity to preform field engineering (represented by SeObject from NETN-SE)</semantics>
                        <parameter>
                            <name>UniqueId</name>
                            <dataType>UUID</dataType>
                            <semantics>Optional. Unique ID of object to create. If not specified, left up to creator.</semantics>
                        </parameter>
                        <parameter>
                            <name>Name</name>
                            <dataType>HLAunicodeString</dataType>
                            <semantics>Required. Name of the object to create. Should (but is not required to) be unique.</semantics>
                        </parameter>
                        <parameter>
                            <name>Geometry</name>
                            <dataType>WorldLocationVariantStruct</dataType>
                            <semantics>Required. Variant record with WorldLocationStructs representing the different ways SeObjects (NETN-SE) locations are represented. PointObject = WorldLocationStruct, LinearObject = WorldLocationPath and ArealObject = WorldLocationLenghtlessArray.</semantics>
                        </parameter>
                        <parameter>
                            <name>TimeToComplete</name>
                            <dataType>TimeMillisecondInt64</dataType>
                            <semantics>Optional. Time to complete the SeObject. If unspecified, this is decided by federate accepting the task.</semantics>
                        </parameter>
                        <parameter>
                            <name>ObstacleType</name>
                            <dataType>EntityTypeStruct</dataType>
                            <semantics>Required. The type of the obstacle defined by the entity type of the obstacle (SISO REF-010 Land Culture Features) .</semantics>
                        </parameter>
                        <interactionClass>
                            <name>CreateBreach</name>
                            <sharing>PublishSubscribe</sharing>
                            <transportation>HLAreliable</transportation>
                            <order>Receive</order>
                            <semantics>Creates a breach or passage on a Se-Object. Discriminant on GeometryType decides if it is a Point, Line or Areal breach.</semantics>
                            <parameter>
                                <name>HostObjectId</name>
                                <dataType>UUID</dataType>
                                <semantics>Required. UUID of object where breach will be applied.</semantics>
                            </parameter>
                        </interactionClass>
                        <interactionClass>
                            <name>CreateCheckpoint</name>
                            <sharing>PublishSubscribe</sharing>
                            <transportation>HLAreliable</transportation>
                            <order>Receive</order>
                            <semantics></semantics>
                        </interactionClass>
                        <interactionClass>
                            <name>LayMinefield</name>
                            <sharing>PublishSubscribe</sharing>
                            <transportation>HLAreliable</transportation>
                            <order>Receive</order>
                            <semantics>Tasking of an entity to create a minefield within the specified geometry. When the task is completed, a minefield object should be published in the federation (e.g. NETN-SE Minefield). This tasking interaction is different from the RPR-FOM MinefieldObjectTransaction interaction, which asks a federate to create a minefield magically.</semantics>
                            <parameter>
                                <name>TypeOfMines</name>
                                <dataType>EntityTypeStruct</dataType>
                                <semantics>Required. Type of mines used, defined in SISO-REF-010</semantics>
                            </parameter>
                            <parameter>
                                <name>MineCount_MineDensity</name>
                                <dataType>MineCountVariantStruct</dataType>
                                <semantics>Required. Count or density of mines.</semantics>
                            </parameter>
                        </interactionClass>
                        <interactionClass>
                            <name>CreateObstacle</name>
                            <sharing>Neither</sharing>
                            <transportation>HLAreliable</transportation>
                            <order>Receive</order>
                            <semantics>Tasking of an entity to create an obstacle with the given geometry. The tasked entity should be within a certain distance (tolerance specified in the federation agreement) of one of the points of the geometry.</semantics>
                        </interactionClass>
                    </interactionClass>
                    <interactionClass>
                        <name>FireAtEntity</name>
                        <sharing>PublishSubscribe</sharing>
                        <transportation>HLAreliable</transportation>
                        <order>Receive</order>
                        <semantics>Tasking of an entity to fire at another specified target entity.</semantics>
                        <parameter>
                            <name>Target</name>
                            <dataType>UUID</dataType>
                            <semantics>Required. Reference to the target entity.</semantics>
                        </parameter>
                        <parameter>
                            <name>Duration</name>
                            <dataType>TimeMillisecondInt64</dataType>
                            <semantics>Optional. The duration of the fire (Milliseconds).</semantics>
                        </parameter>
                        <interactionClass>
                            <name>FireAtEntityWM</name>
                            <sharing>PublishSubscribe</sharing>
                            <transportation>HLAreliable</transportation>
                            <order>Receive</order>
                            <semantics>Tasking of an entity to fire at a specified target entity with the specified weapon and munition data.</semantics>
                            <parameter>
                                <name>WeaponTypeToUse</name>
                                <dataType>EntityTypeStruct</dataType>
                                <semantics>Required. Preferd weapon type.</semantics>
                            </parameter>
                            <parameter>
                                <name>MunitionTypeToUse</name>
                                <dataType>EntityTypeStruct</dataType>
                                <semantics>Required. Prefered munition type.</semantics>
                            </parameter>
                            <parameter>
                                <name>QuantityFired</name>
                                <dataType>Integer16</dataType>
                                <semantics>Required. Number of rounds.</semantics>
                            </parameter>
                            <parameter>
                                <name>RateOfFire</name>
                                <dataType>Float32</dataType>
                                <semantics>Required. Number of rounds per second.</semantics>
                            </parameter>
                        </interactionClass>
                    </interactionClass>
                    <interactionClass>
                        <name>FireAtLocation</name>
                        <sharing>PublishSubscribe</sharing>
                        <transportation>HLAreliable</transportation>
                        <order>Receive</order>
                        <semantics>Tasking of an entity to fire at a location.</semantics>
                        <parameter>
                            <name>Location</name>
                            <dataType>WorldLocationStruct</dataType>
                            <semantics>Required. The location to fire at.</semantics>
                        </parameter>
                        <parameter>
                            <name>Duration</name>
                            <dataType>TimeMillisecondInt64</dataType>
                            <semantics>Required. The duration of the fire (milliseconds).</semantics>
                        </parameter>
                        <parameter>
                            <name>LocationUuid</name>
                            <dataType>UUID</dataType>
                            <semantics>Optional. The location to fire at by reference to a NETN SE, SE_GeoObject.</semantics>
                        </parameter>
                        <interactionClass>
                            <name>FireAtLocationWM</name>
                            <sharing>PublishSubscribe</sharing>
                            <transportation>HLAreliable</transportation>
                            <order>Receive</order>
                            <semantics>Tasking of an entity to fire at a location with the specified weapon and munition.</semantics>
                            <parameter>
                                <name>WeaponTypeToUse</name>
                                <dataType>EntityTypeStruct</dataType>
                                <semantics>Required. Preferd weapon type.</semantics>
                            </parameter>
                            <parameter>
                                <name>MunitionTypeToUse</name>
                                <dataType>EntityTypeStruct</dataType>
                                <semantics>Required. Prefered muntion type.</semantics>
                            </parameter>
                            <parameter>
                                <name>QuantityFired</name>
                                <dataType>Integer16</dataType>
                                <semantics>Required. Number of rounds to fire</semantics>
                            </parameter>
                            <parameter>
                                <name>RateOfFire</name>
                                <dataType>Float32</dataType>
                                <semantics>Required. Number of rounds per second.</semantics>
                            </parameter>
                        </interactionClass>
                    </interactionClass>
                    <interactionClass>
                        <name>FollowEntity</name>
                        <sharing>PublishSubscribe</sharing>
                        <transportation>HLAreliable</transportation>
                        <order>Receive</order>
                        <semantics>Tasking of an entity to follow another entity at a specified distance.</semantics>
                        <parameter>
                            <name>Entity</name>
                            <dataType>UUID</dataType>
                            <semantics>Required. Reference to the entity to follow.</semantics>
                        </parameter>
                        <parameter>
                            <name>Behind</name>
                            <dataType>MeterFloat32</dataType>
                            <semantics>Required. The distance in meters behind the entity to follow.</semantics>
                        </parameter>
                        <parameter>
                            <name>Right</name>
                            <dataType>MeterFloat32</dataType>
                            <semantics>Required. The distance in meters to the right of the entity to follow.</semantics>
                        </parameter>
                        <parameter>
                            <name>Above</name>
                            <dataType>MeterFloat32</dataType>
                            <semantics>Required. The distance in meters above the entity to follow.</semantics>
                        </parameter>
                        <parameter>
                            <name>Duration</name>
                            <dataType>TimeMillisecondInt64</dataType>
                            <semantics>Required. The duration of the follow action (milliseconds).</semantics>
                        </parameter>
                    </interactionClass>
                    <interactionClass>
                        <name>Move</name>
                        <sharing>PublishSubscribe</sharing>
                        <transportation>HLAreliable</transportation>
                        <order>Receive</order>
                        <semantics>Tasking of an entity to move in a specified direction for a given duration of time.</semantics>
                        <parameter>
                            <name>Direction</name>
                            <dataType>AngleDegreeFloat32</dataType>
                            <semantics>Required. Direction of movement (compass degrees). 
Heading 0 deg refers to East. 
Heading 90 deg refers to North.</semantics>
                        </parameter>
                        <parameter>
                            <name>Duration</name>
                            <dataType>TimeMillisecondUnsignedInteger32</dataType>
                            <semantics>Required. The duration of the move (milliseconds).</semantics>
                        </parameter>
                    </interactionClass>
                    <interactionClass>
                        <name>MoveIntoFormation</name>
                        <sharing>PublishSubscribe</sharing>
                        <transportation>HLAreliable</transportation>
                        <order>Receive</order>
                        <semantics>Tasking of an entity to move into the given formation on the given location with the given heading.</semantics>
                        <parameter>
                            <name>Formation</name>
                            <dataType>FormationEnum32</dataType>
                            <semantics>Required. The type of positional arrangement the entity.</semantics>
                        </parameter>
                        <parameter>
                            <name>Location</name>
                            <dataType>WorldLocationStruct</dataType>
                            <semantics>Required. The location to move to.</semantics>
                        </parameter>
                        <parameter>
                            <name>Distance</name>
                            <dataType>MeterFloat32</dataType>
                            <semantics>Required. The minimum distance between entities in the formation.</semantics>
                        </parameter>
                        <parameter>
                            <name>Heading</name>
                            <dataType>AngleDegreeFloat32</dataType>
                            <semantics>Required. The heading of the formation. Compass degrees 
Heading 0 deg refers to East. 
Heading 90 deg refers to North.</semantics>
                        </parameter>
                    </interactionClass>
                    <interactionClass>
                        <name>MoveToEntity</name>
                        <sharing>PublishSubscribe</sharing>
                        <transportation>HLAreliable</transportation>
                        <order>Receive</order>
                        <semantics>Tasking of an entity to move to another entity. If a path is provided, the entity should follow the path as its route to the entity. The entity should align with the path from its current position to the nearest position or waypoint on the path. The entity should leave the path at position or waypoint on the path closest to the destination entity. The entity moves directly towards the destination entity if no path (or a zero-length path) is provided.</semantics>
                        <parameter>
                            <name>Entity</name>
                            <dataType>UUID</dataType>
                            <semantics>Required. Reference to the entity to move to.</semantics>
                        </parameter>
                        <parameter>
                            <name>Path</name>
                            <dataType>ArrayOfWorldLocationStruct</dataType>
                            <semantics>Optional. Route to the specified entity.</semantics>
                        </parameter>
                        <parameter>
                            <name>MoveType</name>
                            <dataType>MoveTypeEnum32</dataType>
                            <semantics>Required. Indicates if roads have to be followed.</semantics>
                        </parameter>
                    </interactionClass>
                    <interactionClass>
                        <name>MoveToEntityWithSpeed</name>
                        <sharing>PublishSubscribe</sharing>
                        <transportation>HLAreliable</transportation>
                        <order>Receive</order>
                        <semantics>Tasking of an entity to move to another entity. If a path with speed is provided, the entity should follow the path as its route to the entity. The entity should align with the path from its current position to the nearest position or waypoint on the path. The entity should leave the path at position or waypoint on the path closest to the destination entity. The entity moves directly towards the destination entity if no path (or a zero-length path) is provided.</semantics>
                        <parameter>
                            <name>Entity</name>
                            <dataType>UUID</dataType>
                            <semantics>Required. Reference to the entity to move to.</semantics>
                        </parameter>
                        <parameter>
                            <name>PathWithSpeed</name>
                            <dataType>ArrayOfWaypointsWithSpeed</dataType>
                            <semantics>Optional. Route with speed to the specified entity.</semantics>
                        </parameter>
                        <parameter>
                            <name>MoveType</name>
                            <dataType>MoveTypeEnum32</dataType>
                            <semantics>Indicates if roads have to be followed.</semantics>
                        </parameter>
                    </interactionClass>
                    <interactionClass>
                        <name>MoveToLocation</name>
                        <sharing>PublishSubscribe</sharing>
                        <transportation>HLAreliable</transportation>
                        <order>Receive</order>
                        <semantics>Tasking of an entity to move to the specified destination location. If a path is provided, the entity should follow the path as its route to the destination. The entity should align with the path from its current position to the nearest position or waypoint on the path. The entity should leave the path at position or waypoint on the path closest to the destination. The entity moves directly towards the destination location if no path (or a zero-length path) is provided.</semantics>
                        <parameter>
                            <name>Location</name>
                            <dataType>WorldLocationStruct</dataType>
                            <semantics>Required. The location to move to.</semantics>
                        </parameter>
                        <parameter>
                            <name>Path</name>
                            <dataType>ArrayOfWorldLocationStruct</dataType>
                            <semantics>Optional. A route to use in order to move to the Location.</semantics>
                        </parameter>
                        <parameter>
                            <name>MoveType</name>
                            <dataType>MoveTypeEnum32</dataType>
                            <semantics>Required. Indicates if roads have to be followed.</semantics>
                        </parameter>
                        <parameter>
                            <name>PathUuid</name>
                            <dataType>UUID</dataType>
                            <semantics>Optional. Path to use to get to the Location by reference to a NETN_SE, SE_GeoObject.</semantics>
                        </parameter>
                        <parameter>
                            <name>LocationUuid</name>
                            <dataType>UUID</dataType>
                            <semantics>Optional. The location to move to, by reference to a NETN_SE, SE_GeoObject.</semantics>
                        </parameter>
                    </interactionClass>
                    <interactionClass>
                        <name>MoveToLocationWithSpeed</name>
                        <sharing>PublishSubscribe</sharing>
                        <transportation>HLAreliable</transportation>
                        <order>Receive</order>
                        <semantics>Tasking of an entity to move to the specified destination location with a given speed for each waypoint. If a path is provided, the entity should follow the path as its route to the destination. The entity should align with the path from its current position to the nearest position or waypoint on the path. The entity should leave the path at position or waypoint on the path closest to the destination. The entity moves directly towards the destination location if no path (or a zero-length path) is provided.</semantics>
                        <parameter>
                            <name>Location</name>
                            <dataType>WorldLocationStruct</dataType>
                            <semantics>Required. The location to move to.</semantics>
                        </parameter>
                        <parameter>
                            <name>Path</name>
                            <dataType>ArrayOfWaypointsWithSpeed</dataType>
                            <semantics>Optional. A route to use in order to move to the Location.</semantics>
                        </parameter>
                        <parameter>
                            <name>MoveType</name>
                            <dataType>MoveTypeEnum32</dataType>
                            <semantics>Required. Indicates if roads have to be followed.</semantics>
                        </parameter>
                    </interactionClass>
                    <interactionClass>
                        <name>Mount</name>
                        <sharing>PublishSubscribe</sharing>
                        <transportation>HLAreliable</transportation>
                        <order>Receive</order>
                        <semantics>Tasking of entity to mount the specified entity. The tasked entity should be within a certain distance (tolerance specified in the federation agreements) of the location of the entity to mount.</semantics>
                        <parameter>
                            <name>EntityId</name>
                            <dataType>UUID</dataType>
                            <semantics>Required. Reference to the entity to mount.</semantics>
                        </parameter>
                    </interactionClass>
                    <interactionClass>
                        <name>Observe</name>
                        <sharing>PublishSubscribe</sharing>
                        <transportation>HLAreliable</transportation>
                        <order>Receive</order>
                        <semantics>Tasking of an entity to observe an area.</semantics>
                        <parameter>
                            <name>ObservationArea</name>
                            <dataType>AreaVariantStruct</dataType>
                            <semantics>Required. Area to observe.</semantics>
                        </parameter>
                    </interactionClass>
                    <interactionClass>
                        <name>OperateCheckPoint</name>
                        <sharing>PublishSubscribe</sharing>
                        <transportation>HLAreliable</transportation>
                        <order>Receive</order>
                        <semantics>Tasking of an entity to operate a checkpoint. The tasked entity should be within a certain distance (tolerance specified in the federation agreements) of the location of the checkpoint. If not, a separate move task should be issued first. The tasked entity activates an inactive checkpoint and operates the checkpoint for the specified duration of time.</semantics>
                        <parameter>
                            <name>UniqueId</name>
                            <dataType>UUID</dataType>
                            <semantics>Required. Reference to the checkpoint to operate.</semantics>
                        </parameter>
                        <parameter>
                            <name>Duration</name>
                            <dataType>TimeMillisecondInt64</dataType>
                            <semantics>Required. The duration of the operation of the checkpoint (millisecond).</semantics>
                        </parameter>
                        <parameter>
                            <name>DelayTime</name>
                            <dataType>TimeMillisecondInt64</dataType>
                            <semantics>Optional. New DelayTime attribute for the checkpoint to be operated on. If left blank the DelayTime will remain the same.</semantics>
                        </parameter>
                    </interactionClass>
                    <interactionClass>
                        <name>Patrol</name>
                        <sharing>PublishSubscribe</sharing>
                        <transportation>HLAreliable</transportation>
                        <order>Receive</order>
                        <semantics>Tasking of an entity to perform a patrol. The tasked entity moves from its current position to the start of the patrol route and then moves according to patrol route from its start point in the path, through all waypoints.</semantics>
                        <parameter>
                            <name>Path</name>
                            <dataType>ArrayOfWorldLocationStruct</dataType>
                            <semantics>Required. Specifies the route to patrol.</semantics>
                        </parameter>
                        <parameter>
                            <name>PatrolType</name>
                            <dataType>PatrolTypeEnum32</dataType>
                            <semantics>Required. Defines how the patrol should be excuted. The full movement from start point, through the patrol route and back to the start point is called one cycle.</semantics>
                        </parameter>
                        <parameter>
                            <name>MoveType</name>
                            <dataType>PatrolMoveTypeEnum32</dataType>
                            <semantics>Required. Defines how the entity shall move during the patrol route.</semantics>
                        </parameter>
                        <parameter>
                            <name>PathUuid</name>
                            <dataType>UUID</dataType>
                            <semantics>Optional. Path for the patrol by reference to a NETN_SE, SE_GeoObject.</semantics>
                        </parameter>
                        <interactionClass>
                            <name>PatrolRepeating</name>
                            <sharing>PublishSubscribe</sharing>
                            <transportation>HLAreliable</transportation>
                            <order>Receive</order>
                            <semantics>Tasking of an entity to repeat a patrol for a given duration. When the duration time has passed, then the last cycle of the patrol is completed before the task ends. If the time of a cycle takes longer then the interval time, then the cycle starts directly (without delay). If the time of a cycle takes less than the interval time, then the entity waits at the first point of the patrol route until the next cycle is started.</semantics>
                            <parameter>
                                <name>Duration</name>
                                <dataType>TimeMillisecondInt64</dataType>
                                <semantics>Required. The duration of the total patrol task.</semantics>
                            </parameter>
                            <parameter>
                                <name>IntervalTime</name>
                                <dataType>TimeMillisecondInt64</dataType>
                                <semantics>Required. The time between the start of two cycles, i.e. the time to complete a cycle and any waiting time before starting the next cycle.</semantics>
                            </parameter>
                        </interactionClass>
                    </interactionClass>
                    <interactionClass>
                        <name>PatrolWithSpeed</name>
                        <sharing>PublishSubscribe</sharing>
                        <transportation>HLAreliable</transportation>
                        <order>Receive</order>
                        <semantics>Tasking of an entity to perform a patrol. The tasked entity moves from its current position to the start of the patrol route and then moves according to patrol route from its start point in the path, through all waypoints with the speed specified.</semantics>
                        <parameter>
                            <name>Path</name>
                            <dataType>ArrayOfWaypointsWithSpeed</dataType>
                            <semantics>Required. Specifies the route to patrol.</semantics>
                        </parameter>
                        <parameter>
                            <name>PatrolType</name>
                            <dataType>PatrolTypeEnum32</dataType>
                            <semantics>Required. Defines how the patrol should be excuted. The full movement from start point, through the patrol route and back to the start point is called one cycle.</semantics>
                        </parameter>
                        <parameter>
                            <name>MoveType</name>
                            <dataType>PatrolMoveTypeEnum32</dataType>
                            <semantics>Required. Defines how the entity shall move during the patrol route.</semantics>
                        </parameter>
                        <interactionClass>
                            <name>PatrolRepeatingWithSpeed</name>
                            <sharing>PublishSubscribe</sharing>
                            <transportation>HLAreliable</transportation>
                            <order>Receive</order>
                            <semantics>Tasking of an entity to repeat a patrol for a given duration. When the duration time has passed, then the last cycle of the patrol is completed before the task ends. If the time of a cycle takes longer then the interval time, then the cycle starts directly (without delay). If the time of a cycle takes less than the interval time, then the entity waits at the first point of the patrol route until the next cycle is started.</semantics>
                            <parameter>
                                <name>Duration</name>
                                <dataType>TimeMillisecondInt64</dataType>
                                <semantics>Required. The duration of the total patrol task.</semantics>
                            </parameter>
                            <parameter>
                                <name>IntervalTime</name>
                                <dataType>TimeMillisecondInt64</dataType>
                                <semantics>Required. The time between the start of two cycles, i.e. the time to complete a cycle and any waiting time before starting the next cycle.</semantics>
                            </parameter>
                        </interactionClass>
                    </interactionClass>
                    <interactionClass>
                        <name>SetOrderedAltitude</name>
                        <sharing>PublishSubscribe</sharing>
                        <transportation>HLAreliable</transportation>
                        <order>Receive</order>
                        <semantics>Tasking of an entity to set move to specified altitude.</semantics>
                        <parameter>
                            <name>Altitude</name>
                            <dataType>AltitudeMeterFloat64</dataType>
                            <semantics>Required. Defines the altitude.</semantics>
                        </parameter>
                        <parameter>
                            <name>AltitudeType</name>
                            <dataType>AltitudeTypeEnum8</dataType>
                            <semantics>Required. Above the ground or sea.</semantics>
                        </parameter>
                    </interactionClass>
                    <interactionClass>
                        <name>SetOrderedSpeed</name>
                        <sharing>PublishSubscribe</sharing>
                        <transportation>HLAreliable</transportation>
                        <order>Receive</order>
                        <semantics>Tasking of an entity to change speed.</semantics>
                        <parameter>
                            <name>Speed</name>
                            <dataType>VelocityMeterPerSecondFloat32</dataType>
                            <semantics>Required. Determines the ordered speed to set for an entity, in m/s.</semantics>
                        </parameter>
                    </interactionClass>
                    <interactionClass>
                        <name>SetRulesOfEngagement</name>
                        <sharing>PublishSubscribe</sharing>
                        <transportation>HLAreliable</transportation>
                        <order>Receive</order>
                        <semantics>Tasking of an entity to change its rules of engagement.</semantics>
                        <parameter>
                            <name>RulesOfEngagement</name>
                            <dataType>RulesOfEngagementEnum8</dataType>
                            <semantics>Required. Determines the rules of engagment for an entity.</semantics>
                        </parameter>
                    </interactionClass>
                    <interactionClass>
                        <name>SetTransmitterStatus</name>
                        <sharing>PublishSubscribe</sharing>
                        <transportation>HLAreliable</transportation>
                        <order>Receive</order>
                        <semantics>Tasking of an entity to switch on/off all of its transmitters.</semantics>
                        <parameter>
                            <name>Status</name>
                            <dataType>TransmitterOperationalStatusEnum8</dataType>
                            <semantics>Required. Status on the transmitter.</semantics>
                        </parameter>
                    </interactionClass>
                    <interactionClass>
                        <name>StopAtSideOfRoad</name>
                        <sharing>PublishSubscribe</sharing>
                        <transportation>HLAreliable</transportation>
                        <order>Receive</order>
                        <semantics>Tasking of an entity to stop at the side of the road. This task is only relevant for an entity that is moving along a road to a destination. The executing move task is cancelled, and a new move is defined towards a position at the side of the road (the simulator has to calculate this location).</semantics>
                    </interactionClass>
                    <interactionClass>
                        <name>TurnToHeading</name>
                        <sharing>PublishSubscribe</sharing>
                        <transportation>HLAreliable</transportation>
                        <order>Receive</order>
                        <semantics>Tasking of an entity to turn to the specified heading.</semantics>
                        <parameter>
                            <name>Heading</name>
                            <dataType>AngleRadianFloat32</dataType>
                            <semantics>Required. The heading an entity has to turn to. 
Heading 0 rad refers to East. 
Heading pi/2 rad refers to North.</semantics>
                        </parameter>
                        <interactionClass>
                            <name>TurnToOrientation</name>
                            <sharing>PublishSubscribe</sharing>
                            <transportation>HLAreliable</transportation>
                            <order>Receive</order>
                            <semantics>Tasking of an entity to rotate to a specified orientation, including pitch and roll.</semantics>
                            <parameter>
                                <name>Pitch</name>
                                <dataType>AngleRadianFloat32</dataType>
                                <semantics>Required. Defines the angle ot the pitch.</semantics>
                            </parameter>
                            <parameter>
                                <name>Roll</name>
                                <dataType>AngleRadianFloat32</dataType>
                                <semantics>Required. Defines the angle ot the roll.</semantics>
                            </parameter>
                        </interactionClass>
                    </interactionClass>
                    <interactionClass>
                        <name>Wait</name>
                        <sharing>PublishSubscribe</sharing>
                        <transportation>HLAreliable</transportation>
                        <order>Receive</order>
                        <semantics>Tasking of an entity to wait for a duration of time.</semantics>
                        <parameter>
                            <name>Duration</name>
                            <dataType>TimeMillisecondInt64</dataType>
                            <semantics>Required. Specifies the wait time (milliseconds).</semantics>
                        </parameter>
                    </interactionClass>
                </interactionClass>
                <interactionClass>
                    <name>ETR_TaskManagement</name>
                    <sharing>Neither</sharing>
                    <transportation>HLAreliable</transportation>
                    <order>Receive</order>
                    <semantics>A base interaction class for more specialized task management interaction classes.</semantics>
                    <parameter>
                        <name>TaskManagementId</name>
                        <dataType>UUID</dataType>
                        <semantics>Required. Uniqie identifier for the management task.</semantics>
                    </parameter>
                    <parameter>
                        <name>Taskee</name>
                        <dataType>UUID</dataType>
                        <semantics>Required. Reference to the entity that should execute the task.</semantics>
                    </parameter>
                    <parameter>
                        <name>Tasker</name>
                        <dataType>Callsign</dataType>
                        <semantics>Optional. Identifies the commander of the task.</semantics>
                    </parameter>
                    <parameter>
                        <name>CommunicationNetworkIds</name>
                        <dataType>ArrayOfText64</dataType>
                        <semantics>Optional. Reference to communication networks (NETN-COM) used to transfer task management messages. If not provided, the message transmission should not be modelled and federates should receive and act on the task management messages directly.</semantics>
                    </parameter>
                    <interactionClass>
                        <name>RequestTaskStatusReport</name>
                        <sharing>Neither</sharing>
                        <transportation>HLAreliable</transportation>
                        <order>Receive</order>
                        <semantics>Requests the responsible federate to send TaskStatusReport interactions for the specified tasks. 
 
For this class, the Taskee parameter is Optional, and refers to the entity for whom task status reports are being requested. If omitted, request refers to all tasks specified in Tasks. At least one of Taskee or Tasks must be specified.</semantics>
                        <parameter>
                            <name>Tasks</name>
                            <dataType>ArrayOfTaskIds</dataType>
                            <semantics>Optional. Tasks for which status reports are being requested. If omitted, request refers to all previously sent tasks with the specified Taskee. At least one of this Parameter or Taskee must be specified.</semantics>
                        </parameter>
                    </interactionClass>
                    <interactionClass>
                        <name>FederateTaskExecution</name>
                        <sharing>Neither</sharing>
                        <transportation>HLAreliable</transportation>
                        <order>Receive</order>
                        <semantics></semantics>
                        <interactionClass>
                            <name>RequestFederateTaskCancel</name>
                            <sharing>PublishSubscribe</sharing>
                            <transportation>HLAreliable</transportation>
                            <order>Receive</order>
                            <semantics>Send a request to target federate to cancel current remote task.</semantics>
                            <parameter>
                                <name>FederateId</name>
                                <dataType>UUID</dataType>
                                <semantics>Required. Target federate.</semantics>
                            </parameter>
                            <parameter>
                                <name>TaskId</name>
                                <dataType>UUID</dataType>
                                <semantics>Required. Unique ID of task to be canceled.</semantics>
                            </parameter>
                        </interactionClass>
                        <interactionClass>
                            <name>FederateTaskRequestResponse</name>
                            <sharing>PublishSubscribe</sharing>
                            <transportation>HLAreliable</transportation>
                            <order>Receive</order>
                            <semantics>Response if the task will be executed.</semantics>
                            <parameter>
                                <name>ResponseStatus</name>
                                <dataType>RemoteTaskResponseStatusEnum</dataType>
                                <semantics>Required. If the task is accepted or refused.</semantics>
                            </parameter>
                        </interactionClass>
                        <interactionClass>
                            <name>RequestFederateTaskExecution</name>
                            <sharing>PublishSubscribe</sharing>
                            <transportation>HLAreliable</transportation>
                            <order>Receive</order>
                            <semantics>Interaction to request a remote execution of a task.</semantics>
                            <parameter>
                                <name>FederateId</name>
                                <dataType>UUID</dataType>
                                <semantics>Required. Unique ID of target federate.</semantics>
                            </parameter>
                            <parameter>
                                <name>TaskDefinition</name>
                                <dataType>TaskDefinition</dataType>
                                <semantics>Required. Task definition of the task to be executed.</semantics>
                            </parameter>
                        </interactionClass>
                    </interactionClass>
                    <interactionClass>
                        <name>CancelAllTasks</name>
                        <sharing>PublishSubscribe</sharing>
                        <transportation>HLAreliable</transportation>
                        <order>Receive</order>
                        <semantics>Management task to an entity to cancel all queued and ongoing tasks.</semantics>
                    </interactionClass>
                    <interactionClass>
                        <name>CancelSpecifiedTasks</name>
                        <sharing>PublishSubscribe</sharing>
                        <transportation>HLAreliable</transportation>
                        <order>Receive</order>
                        <semantics>Management task to an entity to cancel all specified tasks.</semantics>
                        <parameter>
                            <name>Tasks</name>
                            <dataType>ArrayOfTaskIds</dataType>
                            <semantics>Required. Tasks that should be cancelled.</semantics>
                        </parameter>
                    </interactionClass>
                    <interactionClass>
                        <name>TaskStatusReport</name>
                        <sharing>PublishSubscribe</sharing>
                        <transportation>HLAreliable</transportation>
                        <order>Receive</order>
                        <semantics>A management task report regarding the status of a specific task assigned to an entity.</semantics>
                        <parameter>
                            <name>TaskId</name>
                            <dataType>UUID</dataType>
                            <semantics>Required. Identifies the task associated with the task report.</semantics>
                        </parameter>
                        <parameter>
                            <name>TaskStatus</name>
                            <dataType>TaskStatusEnum32</dataType>
                            <semantics>Required. Indicates the status of the task.</semantics>
                        </parameter>
                        <parameter>
                            <name>When</name>
                            <dataType>Datetime18</dataType>
                            <semantics>Required. Creation date and time of the report.</semantics>
                        </parameter>
                        <parameter>
                            <name>Comments</name>
                            <dataType>HLAunicodeString</dataType>
                            <semantics>Optional. Any additional comments. For example reason for cancelling, errors, etc.</semantics>
                        </parameter>
                    </interactionClass>
                    <interactionClass>
                        <name>RequestCurrentSensorDetections</name>
                        <sharing>PublishSubscribe</sharing>
                        <transportation>HLAreliable</transportation>
                        <order>Receive</order>
                        <semantics></semantics>
                    </interactionClass>
                </interactionClass>
            </interactionClass>
        </interactionClass>
    </interactions>
    <dataTypes>
        <simpleDataTypes/>
        <enumeratedDataTypes>
            <enumeratedData>
                <name>RemoteTaskResponseStatusEnum</name>
                <representation>HLAinteger32BE</representation>
                <semantics>Response status for remote task execution tasks.</semantics>
                <enumerator>
                    <name>REFUSED</name>
                    <value>0</value>
                </enumerator>
                <enumerator>
                    <name>ACCEPTED</name>
                    <value>1</value>
                </enumerator>
            </enumeratedData>
            <enumeratedData>
                <name>RulesOfEngagementEnum8</name>
                <representation>HLAoctet</representation>
                <semantics>Rules of engagment for a simulated entity.</semantics>
                <enumerator>
                    <name>HoldFire</name>
                    <value>0</value>
                </enumerator>
                <enumerator>
                    <name>FireAtWill</name>
                    <value>1</value>
                </enumerator>
                <enumerator>
                    <name>FireWhenFiredUpon</name>
                    <value>2</value>
                </enumerator>
            </enumeratedData>
            <enumeratedData>
                <name>TaskStatusEnum32</name>
                <representation>HLAinteger32BE</representation>
                <semantics>The status of a task.</semantics>
                <enumerator>
                    <name>Accepted</name>
                    <value>0</value>
                </enumerator>
                <enumerator>
                    <name>Refused</name>
                    <value>1</value>
                </enumerator>
                <enumerator>
                    <name>Cancelled</name>
                    <value>2</value>
                </enumerator>
                <enumerator>
                    <name>Executing</name>
                    <value>3</value>
                </enumerator>
                <enumerator>
                    <name>Completed</name>
                    <value>4</value>
                </enumerator>
                <enumerator>
                    <name>Error</name>
                    <value>5</value>
                </enumerator>
            </enumeratedData>
            <enumeratedData>
                <name>IdentificationLevelEnum8</name>
                <representation>HLAoctet</representation>
                <semantics>The identification level of an object.</semantics>
                <enumerator>
                    <name>Lost</name>
                    <value>0</value>
                </enumerator>
                <enumerator>
                    <name>Detected</name>
                    <value>1</value>
                </enumerator>
                <enumerator>
                    <name>Classified</name>
                    <value>2</value>
                </enumerator>
                <enumerator>
                    <name>Identified</name>
                    <value>3</value>
                </enumerator>
                <enumerator>
                    <name>FullKnowledge</name>
                    <value>4</value>
                </enumerator>
            </enumeratedData>
            <enumeratedData>
                <name>MoveTypeEnum32</name>
                <representation>HLAinteger32BE</representation>
                <semantics>CrossCountry: move directly to the destination without taking into account the roads. 
OnlyRoads: stay on the roads to get to the closest point to the destination that is still on a road; if there is no road very near to the start (within around 10 meters) there will be no movement at all. 
RoadsAndCrossCountry: move to the destination by taking into account the roads; it is allowed to go off the road.</semantics>
                <enumerator>
                    <name>CrossCountry</name>
                    <value>0</value>
                </enumerator>
                <enumerator>
                    <name>OnlyRoads</name>
                    <value>1</value>
                </enumerator>
                <enumerator>
                    <name>RoadsAndCrossCountry</name>
                    <value>2</value>
                </enumerator>
            </enumeratedData>
            <enumeratedData>
                <name>AttackTypeEnum32</name>
                <representation>HLAinteger32BE</representation>
                <semantics>The kind of attack by the enemy.</semantics>
                <enumerator>
                    <name>None</name>
                    <value>0</value>
                </enumerator>
                <enumerator>
                    <name>Artillery</name>
                    <value>1</value>
                </enumerator>
                <enumerator>
                    <name>HeavyArtillery</name>
                    <value>2</value>
                </enumerator>
                <enumerator>
                    <name>Other</name>
                    <value>3</value>
                </enumerator>
            </enumeratedData>
            <enumeratedData>
                <name>TaskModeEnum8</name>
                <representation>HLAoctet</representation>
                <semantics>Execute task in non-concurrent mode or concurrent mode. 
 
In the non-concurrent mode the task is placed on the task list for the entity, which serves as a waiting list. Once the task is at the head of the task list, and the currently executing task completes, it is removed from the task list and started. Using this task mode, tasks are executed one after the other. 
 
In the concurrent mode, the task is executed concurrently with other tasks. As soon as the task is accepted for an entity, it is started. With this task mode, there is no task list involved.</semantics>
                <enumerator>
                    <name>NonConcurrentMode</name>
                    <value>0</value>
                </enumerator>
                <enumerator>
                    <name>ConcurrentMode</name>
                    <value>1</value>
                </enumerator>
            </enumeratedData>
            <enumeratedData>
                <name>PatrolTypeEnum32</name>
                <representation>HLAinteger32BE</representation>
                <semantics>Other - The behaviour is federate application specific (e.g. wait for next command, etc.) 
Circle - At the end of route, move to start point of patrol route (federate application determines the route) 
Reverse - Follow the patrol route in reverse order.</semantics>
                <enumerator>
                    <name>Other</name>
                    <value>0</value>
                </enumerator>
                <enumerator>
                    <name>Circle</name>
                    <value>1</value>
                </enumerator>
                <enumerator>
                    <name>Reverse</name>
                    <value>2</value>
                </enumerator>
            </enumeratedData>
            <enumeratedData>
                <name>PatrolMoveTypeEnum32</name>
                <representation>HLAinteger32BE</representation>
                <semantics>Defines how the movment shall be done during the execution of the patrol. 
Other - Federate application specific.</semantics>
                <enumerator>
                    <name>Other</name>
                    <value>0</value>
                </enumerator>
                <enumerator>
                    <name>Stealth</name>
                    <value>1</value>
                </enumerator>
                <enumerator>
                    <name>Caution</name>
                    <value>2</value>
                </enumerator>
                <enumerator>
                    <name>Open</name>
                    <value>3</value>
                </enumerator>
            </enumeratedData>
            <enumeratedData>
                <name>MineCountEnum32</name>
                <representation>HLAinteger32BE</representation>
                <semantics>Type of mine count.</semantics>
                <enumerator>
                    <name>MineNumber</name>
                    <value>0</value>
                </enumerator>
                <enumerator>
                    <name>MineDensity</name>
                    <value>1</value>
                </enumerator>
            </enumeratedData>
            <enumeratedData>
                <name>GeometryType</name>
                <representation>HLAinteger32BE</representation>
                <semantics>Specifies different geometries.</semantics>
                <enumerator>
                    <name>Point</name>
                    <value>1</value>
                </enumerator>
                <enumerator>
                    <name>Path</name>
                    <value>2</value>
                </enumerator>
                <enumerator>
                    <name>Polygon</name>
                    <value>3</value>
                </enumerator>
            </enumeratedData>
            <enumeratedData>
                <name>TaskTypeEnum</name>
                <representation>HLAinteger32BE</representation>
                <semantics>WIP ETR tasks</semantics>
                <enumerator>
                    <name>InWeaponRangeReport</name>
                    <value>1</value>
                </enumerator>
                <enumerator>
                    <name>SpotReport</name>
                    <value>2</value>
                </enumerator>
                <enumerator>
                    <name>SensorReport</name>
                    <value>3</value>
                </enumerator>
                <enumerator>
                    <name>StatusReport</name>
                    <value>4</value>
                </enumerator>
                <enumerator>
                    <name>DamageStatusReport</name>
                    <value>5</value>
                </enumerator>
                <enumerator>
                    <name>PositionStatusReport</name>
                    <value>6</value>
                </enumerator>
                <enumerator>
                    <name>ResourceStatusReport</name>
                    <value>7</value>
                </enumerator>
                <enumerator>
                    <name>UnderAttackStatusReport</name>
                    <value>8</value>
                </enumerator>
                <enumerator>
                    <name>CapabilitiesSupported</name>
                    <value>9</value>
                </enumerator>
                <enumerator>
                    <name>MagicMove</name>
                    <value>10</value>
                </enumerator>
                <enumerator>
                    <name>MagicResource</name>
                    <value>11</value>
                </enumerator>
                <enumerator>
                    <name>QuerySupportedCapabilities</name>
                    <value>12</value>
                </enumerator>
                <enumerator>
                    <name>ClearEngineering</name>
                    <value>13</value>
                </enumerator>
                <enumerator>
                    <name>Engineering</name>
                    <value>14</value>
                </enumerator>
                <enumerator>
                    <name>CreateBreach</name>
                    <value>15</value>
                </enumerator>
                <enumerator>
                    <name>CreateCheckpoint</name>
                    <value>16</value>
                </enumerator>
                <enumerator>
                    <name>LayMinefield</name>
                    <value>17</value>
                </enumerator>
                <enumerator>
                    <name>Dismount</name>
                    <value>18</value>
                </enumerator>
                <enumerator>
                    <name>DisruptCommunication</name>
                    <value>19</value>
                </enumerator>
                <enumerator>
                    <name>FireAtEntity</name>
                    <value>20</value>
                </enumerator>
                <enumerator>
                    <name>FireAtEntityWM</name>
                    <value>21</value>
                </enumerator>
                <enumerator>
                    <name>FireAtLocation</name>
                    <value>22</value>
                </enumerator>
                <enumerator>
                    <name>FireAtLocationWM</name>
                    <value>23</value>
                </enumerator>
                <enumerator>
                    <name>FollowEntity</name>
                    <value>24</value>
                </enumerator>
                <enumerator>
                    <name>Move</name>
                    <value>25</value>
                </enumerator>
                <enumerator>
                    <name>MoveIntoFormation</name>
                    <value>26</value>
                </enumerator>
                <enumerator>
                    <name>MoveToEntity</name>
                    <value>27</value>
                </enumerator>
                <enumerator>
                    <name>MoveToLocation</name>
                    <value>28</value>
                </enumerator>
                <enumerator>
                    <name>MoveToLocationWithSpeed</name>
                    <value>29</value>
                </enumerator>
                <enumerator>
                    <name>Mount</name>
                    <value>30</value>
                </enumerator>
                <enumerator>
                    <name>Observe</name>
                    <value>31</value>
                </enumerator>
                <enumerator>
                    <name>OperateCheckpoint</name>
                    <value>32</value>
                </enumerator>
                <enumerator>
                    <name>Patrol</name>
                    <value>33</value>
                </enumerator>
                <enumerator>
                    <name>PatrolWithSpeed</name>
                    <value>34</value>
                </enumerator>
                <enumerator>
                    <name>SetOrderedAltitude</name>
                    <value>35</value>
                </enumerator>
                <enumerator>
                    <name>SetOrderedSpeed</name>
                    <value>36</value>
                </enumerator>
                <enumerator>
                    <name>SetRulesOfEngagement</name>
                    <value>37</value>
                </enumerator>
                <enumerator>
                    <name>SetTransmitterStatus</name>
                    <value>38</value>
                </enumerator>
                <enumerator>
                    <name>StopAtSideOfRoad</name>
                    <value>39</value>
                </enumerator>
                <enumerator>
                    <name>TurnToHeading</name>
                    <value>40</value>
                </enumerator>
                <enumerator>
                    <name>TurnToOrientation</name>
                    <value>41</value>
                </enumerator>
                <enumerator>
                    <name>Wait</name>
                    <value>42</value>
                </enumerator>
                <enumerator>
                    <name>RequestTaskStatusReport</name>
                    <value>43</value>
                </enumerator>
                <enumerator>
                    <name>RequestRemoteTaskCancel</name>
                    <value>44</value>
                </enumerator>
                <enumerator>
                    <name>RemoteTaskRequestResponse</name>
                    <value>45</value>
                </enumerator>
                <enumerator>
                    <name>RequestRemoteTaskExecution</name>
                    <value>46</value>
                </enumerator>
                <enumerator>
                    <name>CancelAllTasks</name>
                    <value>47</value>
                </enumerator>
                <enumerator>
                    <name>CancelSpecificTasks</name>
                    <value>48</value>
                </enumerator>
                <enumerator>
                    <name>TaskStatusReport</name>
                    <value>49</value>
                </enumerator>
                <enumerator>
                    <name>RequestCurrentSensorDetections</name>
                    <value>50</value>
                </enumerator>
                <enumerator>
                    <name>CreateObstacle</name>
                    <value>51</value>
                </enumerator>
                <enumerator>
                    <name>MoveToEntityWithSpeed</name>
                    <value>52</value>
                </enumerator>
                <enumerator>
                    <name>PatrolRepeating</name>
                    <value>53</value>
                </enumerator>
                <enumerator>
                    <name>PatrolWithSpeedRepeating</name>
                    <value>54</value>
                </enumerator>
            </enumeratedData>
        </enumeratedDataTypes>
        <arrayDataTypes>
            <arrayData>
                <name>Datetime18</name>
                <dataType>HLAunicodeChar</dataType>
                <cardinality>18</cardinality>
                <encoding>HLAfixedArray</encoding>
                <semantics>A designation of a specified chronological point measured using Coordinated Universal Time (UTC) ISO 8601:2000 as a standard of reference, constrained to "zero meridian" i.e. ï¿½Zuluï¿½ time zone only. This is expressed as a composite field using a compacted ISO notation YYYYMMDDHHMMSS.SSS where YYYY represents a year, MM represents a month in values from 00 to 12, and DD represents a day in values from 00 to 31, HH represents an hour, MM represents a minute, and SS.SSS represents the number of seconds and milliseconds.</semantics>
            </arrayData>
            <arrayData>
                <name>ArrayOfTaskIds</name>
                <dataType>UUID</dataType>
                <cardinality>Dynamic</cardinality>
                <encoding>HLAvariableArray</encoding>
                <semantics>Array of Task Ids.</semantics>
            </arrayData>
            <arrayData>
                <name>ArrayOfNames</name>
                <dataType>HLAASCIIstring</dataType>
                <cardinality>Dynamic</cardinality>
                <encoding>HLAvariableArray</encoding>
                <semantics>Array of Names.</semantics>
            </arrayData>
            <arrayData>
                <name>ArrayOfSpottedEntities</name>
                <dataType>SpottedEntity</dataType>
                <cardinality>Dynamic</cardinality>
                <encoding>HLAvariableArray</encoding>
                <semantics>The spotted entities at a specific time</semantics>
            </arrayData>
            <arrayData>
                <name>ArrayOfSpottedEquipment</name>
                <dataType>SpottedEquipment</dataType>
                <cardinality>Dynamic</cardinality>
                <encoding>HLAvariableArray</encoding>
                <semantics>An array with spotted equipment at the spotted entity.</semantics>
            </arrayData>
            <arrayData>
                <name>ArrayOfTaskTypes</name>
                <dataType>TaskTypeEnum</dataType>
                <cardinality>Dynamic</cardinality>
                <encoding>HLAvariableArray</encoding>
                <semantics></semantics>
            </arrayData>
            <arrayData>
                <name>ArrayOfSpottedObjects</name>
                <dataType>SpottedObject</dataType>
                <cardinality>Dynamic</cardinality>
                <encoding>HLAvariableArray</encoding>
                <semantics></semantics>
            </arrayData>
            <arrayData>
                <name>ArrayOfTaskDefinitions</name>
                <dataType>TaskDefinition</dataType>
                <cardinality>Dynamic</cardinality>
                <encoding>HLAvariableArray</encoding>
                <semantics>Array containing tasks definitions.</semantics>
            </arrayData>
            <arrayData>
                <name>ArrayOfTaskProgress</name>
                <dataType>TaskProgress</dataType>
                <cardinality>Dynamic</cardinality>
                <encoding>HLAvariableArray</encoding>
                <semantics>Array of task progress types.</semantics>
            </arrayData>
            <arrayData>
                <name>ArrayOfWaypointsWithSpeed</name>
                <dataType>WaypointWithSpeed</dataType>
                <cardinality>Dynamic</cardinality>
                <encoding>HLAvariableArray</encoding>
                <semantics>Array containing extended waypoints.</semantics>
            </arrayData>
        </arrayDataTypes>
        <fixedRecordDataTypes>
            <fixedRecordData>
                <name>SpottedEntity</name>
                <encoding>HLAfixedRecord</encoding>
                <semantics>Descripton of the observed entity. 
The symbol contains information about the spotted entity's relation to the spotter and details about the type and echelon at the spotted entity.</semantics>
                <field>
                    <name>SpottedEntity</name>
                    <dataType>UUID</dataType>
                    <semantics>The unique identifier for the entity</semantics>
                </field>
                <field>
                    <name>Location</name>
                    <dataType>WorldLocationStruct</dataType>
                    <semantics>The location where the entity were spotted</semantics>
                </field>
                <field>
                    <name>Orientation</name>
                    <dataType>OrientationStruct</dataType>
                    <semantics>The orientation in Psi, Theta, Phi [radians]</semantics>
                </field>
                <field>
                    <name>Speed</name>
                    <dataType>VelocityMeterPerSecondFloat32</dataType>
                    <semantics>The speed of the entity (m/s). 
 
Default value: 0 m/s</semantics>
                </field>
                <field>
                    <name>Equipment</name>
                    <dataType>ArrayOfSpottedEquipment</dataType>
                    <semantics>Spotted equipment list, type and number. 
 
Default value: Empty array.</semantics>
                </field>
                <field>
                    <name>Activity</name>
                    <dataType>AggregateMissionEnum16</dataType>
                    <semantics>The current activity of the entity. (Fromm NETN-Base) 
Default value: Moving (213)</semantics>
                </field>
                <field>
                    <name>Symbol</name>
                    <dataType>SymbolIdentifier</dataType>
                    <semantics>Symbol identifier for the entity. The detailed level may vary and the publishing federate decides the level of details in the symbol description. E.g. 
Default Ground value: app6b:SUGP------***** 
Default Air value: app6b:SUAP------***** 
Default Sea Surface value: app6b:SUSP------***** 
Default Subsurface value: app6b:SUUP------*****</semantics>
                </field>
            </fixedRecordData>
            <fixedRecordData>
                <name>SpottedEquipment</name>
                <encoding>HLAfixedRecord</encoding>
                <semantics>Equipment at the spotted entity.</semantics>
                <field>
                    <name>Type</name>
                    <dataType>EntityTypeStruct</dataType>
                    <semantics>Use entity types from Supply Types, Expendibles or Sensors/Emitters tables  (SISO-REF-010-2010, 4.3), 
for aggregate entities, also use entity types from platform tables to describe the equipment type.</semantics>
                </field>
                <field>
                    <name>NumberOfEquipment</name>
                    <dataType>QuantityInt32</dataType>
                    <semantics>The number of the equipment.</semantics>
                </field>
            </fixedRecordData>
            <fixedRecordData>
                <name>FollowEntityTaskDefinition</name>
                <encoding>HLAfixedRecord</encoding>
                <semantics>Task specific data for FollowEntity</semantics>
                <field>
                    <name>FollowedEntity</name>
                    <dataType>UUID</dataType>
                    <semantics>Reference to the entity to follow.</semantics>
                </field>
                <field>
                    <name>Behind</name>
                    <dataType>MeterFloat32</dataType>
                    <semantics>The distance in meters behind the entity to follow.</semantics>
                </field>
                <field>
                    <name>Right</name>
                    <dataType>MeterFloat32</dataType>
                    <semantics>The distance in meters to the right of the entity to follow.</semantics>
                </field>
                <field>
                    <name>Above</name>
                    <dataType>MeterFloat32</dataType>
                    <semantics>The distance in meters above the entity to follow.</semantics>
                </field>
                <field>
                    <name>Duration</name>
                    <dataType>TimeMillisecondInt64</dataType>
                    <semantics>The duration of the follow action (Milliseconds).</semantics>
                </field>
            </fixedRecordData>
            <fixedRecordData>
                <name>SpottedObject</name>
                <encoding>HLAfixedRecord</encoding>
                <semantics></semantics>
                <field>
                    <name>SpottedObject</name>
                    <dataType>UUID</dataType>
                    <semantics></semantics>
                </field>
                <field>
                    <name>Location</name>
                    <dataType>WorldLocationStruct</dataType>
                    <semantics>Location where the object was spotted.</semantics>
                </field>
                <field>
                    <name>Symbol</name>
                    <dataType>SymbolIdentifier</dataType>
                    <semantics></semantics>
                </field>
                <field>
                    <name>Type</name>
                    <dataType>EnvironmentObjectTypeStruct</dataType>
                    <semantics></semantics>
                </field>
            </fixedRecordData>
            <fixedRecordData>
                <name>TaskDefinition</name>
                <encoding>HLAfixedRecord</encoding>
                <semantics>Fixed record to describe definition of a task.</semantics>
                <field>
                    <name>TaskId</name>
                    <dataType>UUID</dataType>
                    <semantics>Unique identifier for the task.</semantics>
                </field>
                <field>
                    <name>Taskee</name>
                    <dataType>UUID</dataType>
                    <semantics>Reference to who is executing the task.</semantics>
                </field>
                <field>
                    <name>Tasker</name>
                    <dataType>Callsign</dataType>
                    <semantics>Callsign of the commander of the task.</semantics>
                </field>
                <field>
                    <name>StartWhen</name>
                    <dataType>Datetime18</dataType>
                    <semantics>Timestamp of when the task should start.</semantics>
                </field>
                <field>
                    <name>Why</name>
                    <dataType>HLAunicodeString</dataType>
                    <semantics>A text describing the reason for this task.</semantics>
                </field>
                <field>
                    <name>TaskMode</name>
                    <dataType>TaskModeEnum8</dataType>
                    <semantics>Determines the task mode.</semantics>
                </field>
                <field>
                    <name>CommunicationNetworkIds</name>
                    <dataType>ArrayOfText64</dataType>
                    <semantics>Reference to the communication networks (NETN-COM) used to transfer this task.</semantics>
                </field>
                <field>
                    <name>Activity</name>
                    <dataType>AggregateMissionEnum16</dataType>
                    <semantics>Suggested activity for unit executing this task.</semantics>
                </field>
                <field>
                    <name>Status</name>
                    <dataType>TaskStatusEnum32</dataType>
                    <semantics>Current status of this task.</semantics>
                </field>
                <field>
                    <name>DefinitionData</name>
                    <dataType>TaskDefinitionVariantRecord</dataType>
                    <semantics>Task specific definition details.</semantics>
                </field>
                <field>
                    <name>MainTaskId</name>
                    <dataType>UUID</dataType>
                    <semantics>Unique identifier of the main task if this task is part of a complex task sequence. Equals TaskId if this task is the main task.</semantics>
                </field>
                <field>
                    <name>PreviousTaskId</name>
                    <dataType>UUID</dataType>
                    <semantics>Unique identifier of the previous task if this task is part of a complex task sequence. Null if this task is the first in the sequence.</semantics>
                </field>
                <field>
                    <name>NextTaskId</name>
                    <dataType>UUID</dataType>
                    <semantics>Unique identifier of the next task if this task is part of a complex task sequence. Null if this task is the last in the sequence.</semantics>
                </field>
            </fixedRecordData>
            <fixedRecordData>
                <name>TaskProgress</name>
                <encoding>HLAfixedRecord</encoding>
                <semantics>Fixed record to describe progress of a task.</semantics>
                <field>
                    <name>TaskId</name>
                    <dataType>UUID</dataType>
                    <semantics>Reference to the task this progress belongs to.</semantics>
                </field>
                <field>
                    <name>LastUpdated</name>
                    <dataType>Datetime18</dataType>
                    <semantics>When was this task last updated.</semantics>
                </field>
                <field>
                    <name>ExecutingFederateId</name>
                    <dataType>UUID</dataType>
                    <semantics>Reference to the federate that is executing this task.</semantics>
                </field>
                <field>
                    <name>ETC</name>
                    <dataType>Datetime18</dataType>
                    <semantics>Estimated time to completion.</semantics>
                </field>
                <field>
                    <name>ProgressData</name>
                    <dataType>TaskProgressVariantRecord</dataType>
                    <semantics>Variant record with task specific progress data.</semantics>
                </field>
            </fixedRecordData>
            <fixedRecordData>
                <name>MoveToLocationTaskDefinition</name>
                <encoding>HLAfixedRecord</encoding>
                <semantics>Task specific data for MoveToLocation task.</semantics>
                <field>
                    <name>Location</name>
                    <dataType>WorldLocationStruct</dataType>
                    <semantics>Location to move to.</semantics>
                </field>
                <field>
                    <name>Path</name>
                    <dataType>ArrayOfWorldLocationStruct</dataType>
                    <semantics>Path to use in order to move to Location.</semantics>
                </field>
                <field>
                    <name>MoveType</name>
                    <dataType>MoveTypeEnum32</dataType>
                    <semantics>Indicates if roads have to be followed.</semantics>
                </field>
            </fixedRecordData>
            <fixedRecordData>
                <name>PatrolTaskDefinition</name>
                <encoding>HLAfixedRecord</encoding>
                <semantics>Task specific task for a single Patrol task.</semantics>
                <field>
                    <name>Path</name>
                    <dataType>ArrayOfWorldLocationStruct</dataType>
                    <semantics>Specifies the route to patrol.</semantics>
                </field>
                <field>
                    <name>PatrolType</name>
                    <dataType>PatrolTypeEnum32</dataType>
                    <semantics>Defined how the patrol should be executed. The full movement from start point, through the patrol route and back to the start point is called one cycle.</semantics>
                </field>
                <field>
                    <name>MoveType</name>
                    <dataType>PatrolMoveTypeEnum32</dataType>
                    <semantics>Defines how the entity shall move during the patrol route.</semantics>
                </field>
            </fixedRecordData>
            <fixedRecordData>
                <name>EngineeringTaskDefinition</name>
                <encoding>HLAfixedRecord</encoding>
                <semantics>Task specific data for Engineering tasks.</semantics>
                <field>
                    <name>Name</name>
                    <dataType>HLAunicodeString</dataType>
                    <semantics>Name of the object to create</semantics>
                </field>
                <field>
                    <name>Geometry</name>
                    <dataType>WorldLocationVariantStruct</dataType>
                    <semantics>The geometry of the object to create. Point geometry will create a PointObject; Path geometry will create a LinearObject; Polygon geometry will create an ArealObject. This parameter contextualizes the Type parameter.</semantics>
                </field>
                <field>
                    <name>Type</name>
                    <dataType>EnvironmentObjectTypeStruct</dataType>
                    <semantics>Type of object to create. Must be interpreted in context of the Geometry parameter.</semantics>
                </field>
                <field>
                    <name>Comment</name>
                    <dataType>HLAunicodeString</dataType>
                    <semantics>Comment to add to the created object.</semantics>
                </field>
                <field>
                    <name>TimeToComplete</name>
                    <dataType>TimeMillisecondInt64</dataType>
                    <semantics>The time it shall take the tasked entity to create the object. If unspecified, this is decided by federate accepting the task.</semantics>
                </field>
            </fixedRecordData>
            <fixedRecordData>
                <name>LayMinefieldTaskDefinition</name>
                <encoding>HLAfixedRecord</encoding>
                <semantics>Task specific data for LayMinefield Task, builds on CreateSeObjectTaskDefinition.</semantics>
                <field>
                    <name>BaseSeObjectTaskDefinition</name>
                    <dataType>EngineeringTaskDefinition</dataType>
                    <semantics>Reference to base object.</semantics>
                </field>
                <field>
                    <name>Density</name>
                    <dataType>QuantityFloat32</dataType>
                    <semantics>Mine density</semantics>
                </field>
            </fixedRecordData>
            <fixedRecordData>
                <name>PatrolRepeatingTaskDefinition</name>
                <encoding>HLAfixedRecord</encoding>
                <semantics>Task specific data for PatrolRepeating task, builds on PatrolTaskDefinition.</semantics>
                <field>
                    <name>PatrolTaskDefinition</name>
                    <dataType>PatrolTaskDefinition</dataType>
                    <semantics>Reference to base patrol.</semantics>
                </field>
                <field>
                    <name>Duration</name>
                    <dataType>TimeMillisecondInt64</dataType>
                    <semantics>The duration of the total patrol task.</semantics>
                </field>
                <field>
                    <name>IntervalTime</name>
                    <dataType>TimeMillisecondInt64</dataType>
                    <semantics>The time between the start of two routes.</semantics>
                </field>
            </fixedRecordData>
            <fixedRecordData>
                <name>FireAtEntityTaskDefinition</name>
                <encoding>HLAfixedRecord</encoding>
                <semantics>Task specific data for FireAtEntity task.</semantics>
                <field>
                    <name>UUID</name>
                    <dataType>UUID</dataType>
                    <semantics>Target to fire at.</semantics>
                </field>
                <field>
                    <name>Duration</name>
                    <dataType>TimeMillisecondInt64</dataType>
                    <semantics>Duration of the fire (milliseconds). Can be 0</semantics>
                </field>
            </fixedRecordData>
            <fixedRecordData>
                <name>FireAtEntityWMTaskDefinition</name>
                <encoding>HLAfixedRecord</encoding>
                <semantics>Task specific data for fireAtEnityWM task, builds on FireAtEntity task.</semantics>
                <field>
                    <name>FireAtEntityTask</name>
                    <dataType>FireAtEntityTaskDefinition</dataType>
                    <semantics>UUID and duration.</semantics>
                </field>
                <field>
                    <name>WeaponTypeToUse</name>
                    <dataType>EntityTypeStruct</dataType>
                    <semantics>Preferred weapon type.</semantics>
                </field>
                <field>
                    <name>MunitionTypeToUse</name>
                    <dataType>EntityTypeStruct</dataType>
                    <semantics>Preferred munition to use.</semantics>
                </field>
                <field>
                    <name>QuantityFired</name>
                    <dataType>Integer16</dataType>
                    <semantics>Number of rounds.</semantics>
                </field>
                <field>
                    <name>RateOfFire</name>
                    <dataType>Float32</dataType>
                    <semantics>Number of rounds per second.</semantics>
                </field>
            </fixedRecordData>
            <fixedRecordData>
                <name>FireAtLocationTaskDefinition</name>
                <encoding>HLAfixedRecord</encoding>
                <semantics>Task spcific data for FireAtLocation task.</semantics>
                <field>
                    <name>Location</name>
                    <dataType>WorldLocationStruct</dataType>
                    <semantics>Locataion of where to fire.</semantics>
                </field>
                <field>
                    <name>Duration</name>
                    <dataType>TimeMillisecondInt64</dataType>
                    <semantics>How long to fire for.</semantics>
                </field>
            </fixedRecordData>
            <fixedRecordData>
                <name>FireAtLocationWMTaskDefinition</name>
                <encoding>HLAfixedRecord</encoding>
                <semantics>Task specific data for FireAtLocationWM task, builds on FireAtEntity.</semantics>
                <field>
                    <name>FireAtLocationTask</name>
                    <dataType>FireAtLocationTaskDefinition</dataType>
                    <semantics>UUID and duration.</semantics>
                </field>
                <field>
                    <name>WeaponTypeToUse</name>
                    <dataType>EntityTypeStruct</dataType>
                    <semantics>Preferred weapon type.</semantics>
                </field>
                <field>
                    <name>MunitionTypeToUse</name>
                    <dataType>EntityTypeStruct</dataType>
                    <semantics>Preferred munition to use.</semantics>
                </field>
                <field>
                    <name>QuantityFired</name>
                    <dataType>Integer16</dataType>
                    <semantics>Number of rounds.</semantics>
                </field>
                <field>
                    <name>RateOfFire</name>
                    <dataType>Float32</dataType>
                    <semantics>Number of rounds per second.</semantics>
                </field>
            </fixedRecordData>
            <fixedRecordData>
                <name>WaypointWithSpeed</name>
                <encoding>HLAfixedRecord</encoding>
                <semantics>Extended WorldLocationStruct that includes speed.</semantics>
                <field>
                    <name>WorldLocationStruct</name>
                    <dataType>WorldLocationStruct</dataType>
                    <semantics>Coordinate to move towards.</semantics>
                </field>
                <field>
                    <name>Speed</name>
                    <dataType>VelocityMeterPerSecondFloat32</dataType>
                    <semantics>Speed over ground for an entity, in m/s.</semantics>
                </field>
            </fixedRecordData>
            <fixedRecordData>
                <name>MoveToLocationWithSpeedTaskDefinition</name>
                <encoding>HLAfixedRecord</encoding>
                <semantics>Task specific data for MoveToLocationWithSpeed task.</semantics>
                <field>
                    <name>Path</name>
                    <dataType>ArrayOfWaypointsWithSpeed</dataType>
                    <semantics>Array of extended waypoints.</semantics>
                </field>
                <field>
                    <name>MoveType</name>
                    <dataType>MoveTypeEnum32</dataType>
                    <semantics>Indicates if roads have to be followed.</semantics>
                </field>
                <field>
                    <name>Location</name>
                    <dataType>WaypointWithSpeed</dataType>
                    <semantics>Location to move to, using extended waypoint.</semantics>
                </field>
            </fixedRecordData>
            <fixedRecordData>
                <name>ClearEngineeringTaskDefinition</name>
                <encoding>HLAfixedRecord</encoding>
                <semantics>Task specific data for ClearSeObject.</semantics>
                <field>
                    <name>UniqueId</name>
                    <dataType>UUID</dataType>
                    <semantics>Unique ID of the object to be cleared.</semantics>
                </field>
                <field>
                    <name>TimeToComplete</name>
                    <dataType>TimeMillisecondInt64</dataType>
                    <semantics>The time it shall take the tasked entity to clear the object. If unspecified, this is decided by federate accepting the task.</semantics>
                </field>
            </fixedRecordData>
            <fixedRecordData>
                <name>SetOrderedSpeedTaskDefinition</name>
                <encoding>HLAfixedRecord</encoding>
                <semantics>Task specific data for setOrderedSpeed task.</semantics>
                <field>
                    <name>Speed</name>
                    <dataType>VelocityMeterPerSecondFloat32</dataType>
                    <semantics>Determines the ordered speed to set for an entity, in m/s.</semantics>
                </field>
            </fixedRecordData>
            <fixedRecordData>
                <name>SetOrderedAltitudeTaskDefinition</name>
                <encoding>HLAfixedRecord</encoding>
                <semantics>Task specific data for SetOrderedAltitude</semantics>
                <field>
                    <name>Altitude</name>
                    <dataType>AltitudeMeterFloat64</dataType>
                    <semantics>Defines the altitude.</semantics>
                </field>
                <field>
                    <name>AltitudeType</name>
                    <dataType>AltitudeTypeEnum8</dataType>
                    <semantics>Above the ground or sea.</semantics>
                </field>
            </fixedRecordData>
            <fixedRecordData>
                <name>CreateBreachTaskDefinition</name>
                <encoding>HLAfixedRecord</encoding>
                <semantics>Task definition of createSeBreach task.</semantics>
                <field>
                    <name>BaseSeObjectTaskDefinition</name>
                    <dataType>EngineeringTaskDefinition</dataType>
                    <semantics>Reference to base object.</semantics>
                </field>
                <field>
                    <name>HostObjectId</name>
                    <dataType>UUID</dataType>
                    <semantics>UniqueId of the host object.</semantics>
                </field>
            </fixedRecordData>
            <fixedRecordData>
                <name>MountTaskDefinition</name>
                <encoding>HLAfixedRecord</encoding>
                <semantics>Task specific data for Mount task.</semantics>
                <field>
                    <name>EntityId</name>
                    <dataType>UUID</dataType>
                    <semantics>Reference to the entity to mount.</semantics>
                </field>
            </fixedRecordData>
            <fixedRecordData>
                <name>DismountTaskDefinition</name>
                <encoding>HLAfixedRecord</encoding>
                <semantics>Task specific data for Dismount task.</semantics>
            </fixedRecordData>
            <fixedRecordData>
                <name>PatrolWithSpeedTaskDefinition</name>
                <encoding>HLAfixedRecord</encoding>
                <semantics>Task specific data for Patrol_EXT task.</semantics>
                <field>
                    <name>Path</name>
                    <dataType>ArrayOfWaypointsWithSpeed</dataType>
                    <semantics>Path with speed.</semantics>
                </field>
                <field>
                    <name>PatrolType</name>
                    <dataType>PatrolTypeEnum32</dataType>
                    <semantics>Defined how the patrol should be executed. The full movement from start point, through the patrol route and back to the start point is called one cycle.</semantics>
                </field>
                <field>
                    <name>MoveType</name>
                    <dataType>MoveTypeEnum32</dataType>
                    <semantics>Indicates if roads have to be followed.</semantics>
                </field>
            </fixedRecordData>
            <fixedRecordData>
                <name>PatrolRepeatingWithSpeedTaskDefinition</name>
                <encoding>HLAfixedRecord</encoding>
                <semantics>Task specific data for PatrolRepeating_EXT Task, builds on PatrolTaskDefinition_EXT.</semantics>
                <field>
                    <name>PatrolWithSpeedTaskDefinition</name>
                    <dataType>PatrolWithSpeedTaskDefinition</dataType>
                    <semantics>Reference to base extended patrol.</semantics>
                </field>
                <field>
                    <name>Duration</name>
                    <dataType>TimeMillisecondInt64</dataType>
                    <semantics>The duration of the total patrol task.</semantics>
                </field>
                <field>
                    <name>IntervalTime</name>
                    <dataType>TimeMillisecondInt64</dataType>
                    <semantics>The time between the start of two routes.</semantics>
                </field>
            </fixedRecordData>
            <fixedRecordData>
                <name>CreateCheckpointTaskDefinition</name>
                <encoding>HLAfixedRecord</encoding>
                <semantics>Task specific data for CreateCheckpoint.</semantics>
                <field>
                    <name>BaseSeObjectTaskDefinition</name>
                    <dataType>EngineeringTaskDefinition</dataType>
                    <semantics>Base CreateSeObject task.</semantics>
                </field>
            </fixedRecordData>
            <fixedRecordData>
                <name>OperateCheckpointTaskDefinition</name>
                <encoding>HLAfixedRecord</encoding>
                <semantics>Task specific data for OperateSeCheckpoint.</semantics>
                <field>
                    <name>UniqueId</name>
                    <dataType>UUID</dataType>
                    <semantics>UniqueId of the checkpoint to operate.</semantics>
                </field>
                <field>
                    <name>Duration</name>
                    <dataType>TimeMillisecondInt64</dataType>
                    <semantics>How long to operate the checkpoint for (Milliseconds).</semantics>
                </field>
            </fixedRecordData>
            <fixedRecordData>
                <name>WaitTaskDefinition</name>
                <encoding>HLAfixedRecord</encoding>
                <semantics>Task specific data for Wait task.</semantics>
                <field>
                    <name>Duration</name>
                    <dataType>TimeMillisecondInt64</dataType>
                    <semantics>Specifies the wait time (milliseconds).</semantics>
                </field>
            </fixedRecordData>
            <fixedRecordData>
                <name>DisruptCommunicationTaskDefinition</name>
                <encoding>HLAfixedRecord</encoding>
                <semantics>Task specific data for DisruptCommuncation</semantics>
                <field>
                    <name>AffectedCommunicationNetowrk</name>
                    <dataType>Text64</dataType>
                    <semantics>Reference to the affected Communication Network. If not provided all communication networks are affected.</semantics>
                </field>
                <field>
                    <name>AffectedArea</name>
                    <dataType>GeodeticQuadrangle</dataType>
                    <semantics>Area affected by disruption.</semantics>
                </field>
                <field>
                    <name>DisruptionEnabled</name>
                    <dataType>HLAboolean</dataType>
                    <semantics>Disruption enabled or disabled. Default is True = Enabled.</semantics>
                </field>
            </fixedRecordData>
            <fixedRecordData>
                <name>MoveTaskDefinition</name>
                <encoding>HLAfixedRecord</encoding>
                <semantics>Tasking of an entity to move in a specified direction for a given duration of time.</semantics>
                <field>
                    <name>Direction</name>
                    <dataType>AngleDegreeFloat32</dataType>
                    <semantics>Direction of movement (Compass degrees). 
Heading 0 deg refers to East. 
Heading 90 deg refers to North.</semantics>
                </field>
                <field>
                    <name>Duration</name>
                    <dataType>TimeMillisecondInt64</dataType>
                    <semantics>The duration of the move.</semantics>
                </field>
            </fixedRecordData>
            <fixedRecordData>
                <name>MoveIntoFormationTaskDefinition</name>
                <encoding>HLAfixedRecord</encoding>
                <semantics></semantics>
                <field>
                    <name>Formation</name>
                    <dataType>FormationEnum32</dataType>
                    <semantics>The type of positional arrangement the entity.</semantics>
                </field>
                <field>
                    <name>Location</name>
                    <dataType>WorldLocationStruct</dataType>
                    <semantics>The location to move to.</semantics>
                </field>
                <field>
                    <name>Distance</name>
                    <dataType>MeterFloat32</dataType>
                    <semantics>The minimum distance between entities in the formation.</semantics>
                </field>
                <field>
                    <name>Heading</name>
                    <dataType>AngleDegreeFloat32</dataType>
                    <semantics>The heading of the formation. 
Heading 0 deg refers to East. 
Heading 90 deg refers to North.</semantics>
                </field>
            </fixedRecordData>
            <fixedRecordData>
                <name>MoveToEntityTaskDefinition</name>
                <encoding>HLAfixedRecord</encoding>
                <semantics>Task specific data for MoveToEntity.</semantics>
                <field>
                    <name>Entity</name>
                    <dataType>UUID</dataType>
                    <semantics>Reference to the entity to move to.</semantics>
                </field>
                <field>
                    <name>Path</name>
                    <dataType>ArrayOfWorldLocationStruct</dataType>
                    <semantics>Route to the specified entity. If not specified, take the linear path.</semantics>
                </field>
                <field>
                    <name>MoveType</name>
                    <dataType>MoveTypeEnum32</dataType>
                    <semantics>Indicates if roads have to be followed.</semantics>
                </field>
            </fixedRecordData>
            <fixedRecordData>
                <name>MoveToEntityWithSpeedTaskDefinition</name>
                <encoding>HLAfixedRecord</encoding>
                <semantics>Task specific data for MoveToEntityWithSpeed.</semantics>
                <field>
                    <name>Entity</name>
                    <dataType>UUID</dataType>
                    <semantics>Reference to the entity to move to.</semantics>
                </field>
                <field>
                    <name>Path</name>
                    <dataType>ArrayOfWaypointsWithSpeed</dataType>
                    <semantics>Route to the specified entity.</semantics>
                </field>
                <field>
                    <name>MoveType</name>
                    <dataType>MoveTypeEnum32</dataType>
                    <semantics>Indicates if roads have to be followed.</semantics>
                </field>
            </fixedRecordData>
            <fixedRecordData>
                <name>ObserveTaskDefinition</name>
                <encoding>HLAfixedRecord</encoding>
                <semantics>Task specific data for Observe.</semantics>
                <field>
                    <name>ObservationArea</name>
                    <dataType>AreaVariantStruct</dataType>
                    <semantics>Area to observe.</semantics>
                </field>
            </fixedRecordData>
            <fixedRecordData>
                <name>SetRulesOfEngagementTaskDefinition</name>
                <encoding>HLAfixedRecord</encoding>
                <semantics>Task specific data for SetRulesOfEngagement.</semantics>
                <field>
                    <name>RulesOfEngagement</name>
                    <dataType>RulesOfEngagementEnum8</dataType>
                    <semantics>Determines the rules of engagment for an entity.</semantics>
                </field>
            </fixedRecordData>
            <fixedRecordData>
                <name>SetTransmitterStatusTaskDefinition</name>
                <encoding>HLAfixedRecord</encoding>
                <semantics>Task specific data for SetTransmitterStatus.</semantics>
                <field>
                    <name>Status</name>
                    <dataType>TransmitterOperationalStatusEnum8</dataType>
                    <semantics>Status on the transmitter.</semantics>
                </field>
            </fixedRecordData>
            <fixedRecordData>
                <name>StopAtSideOfRoadTaskDefinition</name>
                <encoding>HLAfixedRecord</encoding>
                <semantics>Task specific data for StopAtSideOfRoad.</semantics>
            </fixedRecordData>
            <fixedRecordData>
                <name>TurnToHeadingTaskDefinition</name>
                <encoding>HLAfixedRecord</encoding>
                <semantics>Tasking of an entity to turn to the specified heading.</semantics>
                <field>
                    <name>Heading</name>
                    <dataType>AngleRadianFloat32</dataType>
                    <semantics>The heading an entity has to turn to. 
Heading 0 rad refers to East. 
Heading pi/2 rad refers to North.</semantics>
                </field>
            </fixedRecordData>
            <fixedRecordData>
                <name>TurnToOrientationTaskDefinition</name>
                <encoding>HLAfixedRecord</encoding>
                <semantics>Task specific data for TurnToOrientation.</semantics>
                <field>
                    <name>Pitch</name>
                    <dataType>AngleRadianFloat32</dataType>
                    <semantics>Defines the angle ot the pitch.</semantics>
                </field>
                <field>
                    <name>Roll</name>
                    <dataType>AngleRadianFloat32</dataType>
                    <semantics>Defines the angle ot the roll.</semantics>
                </field>
            </fixedRecordData>
            <fixedRecordData>
                <name>ElapsedTimeProgress</name>
                <encoding>HLAfixedRecord</encoding>
                <semantics>Progress definition for tasks only needing elapsed time. Used for the following tasks:
ClearEngineering
Engineering
CreateBreach
CreateCheckpoint
LayMinefield
CreateObstacle
OperateCheckpoint
Wait
FollowEntity
Move
</semantics>
                <field>
                    <name>ElapsedTime</name>
                    <dataType>TimeMillisecondInt64</dataType>
                    <semantics>Elapsed time since beginning of task</semantics>
                </field>
            </fixedRecordData>
            <fixedRecordData>
                <name>FireAtTaskProgress</name>
                <encoding>HLAfixedRecord</encoding>
                <semantics>Task progress data for FireAtLocation, FireAtLocationWM, FireAtEntity and FireAtEntityWM</semantics>
                <field>
                    <name>ElapsedTime</name>
                    <dataType>TimeMillisecondInt64</dataType>
                    <semantics>Elapsed time since beginning of task.</semantics>
                </field>
                <field>
                    <name>MunitionUsed</name>
                    <dataType>Integer16</dataType>
                    <semantics>Number of rounds used if specified.</semantics>
                </field>
            </fixedRecordData>
            <fixedRecordData>
                <name>MoveTaskProgress</name>
                <encoding>HLAfixedRecord</encoding>
                <semantics>Task progress data for all move tasks with a path (MoveToEntity, MoveToLocation, MoveToLocationWithSpeed, Patrol and PatrolWithSpeed).</semantics>
                <field>
                    <name>LastPassedWaypointIndex</name>
                    <dataType>Integer32</dataType>
                    <semantics>Index of last passed waypoint.</semantics>
                </field>
                <field>
                    <name>NextWaypointIndex</name>
                    <dataType>Integer32</dataType>
                    <semantics>Index of next waypoint.</semantics>
                </field>
            </fixedRecordData>
            <fixedRecordData>
                <name>PatrolRepeatingProgress</name>
                <encoding>HLAfixedRecord</encoding>
                <semantics>Task progress data for repeating patrol tasks. </semantics>
                <field>
                    <name>PathProgress</name>
                    <dataType>MoveTaskProgress</dataType>
                    <semantics>Progress of the current path.</semantics>
                </field>
                <field>
                    <name>ElapsedTime</name>
                    <dataType>TimeMillisecondInt64</dataType>
                    <semantics>Time elapsed for entire task.</semantics>
                </field>
                <field>
                    <name>IntervalElapsedTime</name>
                    <dataType>TimeMillisecondInt64</dataType>
                    <semantics>Time elapsed in the latest interaval.</semantics>
                </field>
            </fixedRecordData>
        </fixedRecordDataTypes>
        <variantRecordDataTypes>
            <variantRecordData>
                <name>MineCountVariantStruct</name>
                <discriminant>MineCountType</discriminant>
                <dataType>MineCountEnum32</dataType>
                <alternative>
                    <enumerator>MineNumber</enumerator>
                    <name>MineNumber</name>
                    <dataType>Integer32</dataType>
                    <semantics>Number of mines.</semantics>
                </alternative>
                <alternative>
                    <enumerator>MineDensity</enumerator>
                    <name>MineDensity</name>
                    <dataType>PercentFloat32</dataType>
                    <semantics>Percentage of mines.</semantics>
                </alternative>
                <encoding>HLAvariantRecord</encoding>
                <semantics>The number or density of mines.</semantics>
            </variantRecordData>
            <variantRecordData>
                <name>TaskProgressVariantRecord2</name>
                <discriminant>TaskType</discriminant>
                <dataType>TaskTypeEnum</dataType>
                <alternative>
                    <enumerator>MoveToLocation</enumerator>
                    <name>MoveToLocationProgress</name>
                    <dataType>MoveToLocationProgress</dataType>
                    <semantics>Progression for basic move task.</semantics>
                </alternative>
                <alternative>
                    <enumerator>Patrol</enumerator>
                    <name>PatrolProgress</name>
                    <dataType>MoveToLocationProgress</dataType>
                    <semantics>Progress for basic patrol task</semantics>
                </alternative>
                <alternative>
                    <enumerator>PatrolRepeating</enumerator>
                    <name>PatrolRepeatingProgress</name>
                    <dataType>PatrolRepeatingProgress</dataType>
                    <semantics>Progress for repeating patrol.</semantics>
                </alternative>
                <alternative>
                    <enumerator>ClearSeObject</enumerator>
                    <name>ClearSeObjectProgress</name>
                    <dataType>SeObjectProgress</dataType>
                    <semantics>Progress for ClearSeObject</semantics>
                </alternative>
                <alternative>
                    <enumerator>CreateSeObject</enumerator>
                    <name>CreateSeObjectProgress</name>
                    <dataType>SeObjectProgress</dataType>
                    <semantics>Progress for CreateSeObject</semantics>
                </alternative>
                <alternative>
                    <enumerator>CreateSeMinefield</enumerator>
                    <name>CreateSeMinefieldProgress</name>
                    <dataType>SeObjectProgress</dataType>
                    <semantics>Progress for CreateSeMinefield</semantics>
                </alternative>
                <alternative>
                    <enumerator>CreateSeBreach</enumerator>
                    <name>CreateSeBreachProgress</name>
                    <dataType>SeObjectProgress</dataType>
                    <semantics>Progress for CreateSeBreach</semantics>
                </alternative>
                <alternative>
                    <enumerator>CreateSeCheckpoint</enumerator>
                    <name>CreateSeCheckpointProgress</name>
                    <dataType>SeObjectProgress</dataType>
                    <semantics>Progress for CreateSeCheckpoint</semantics>
                </alternative>
                <alternative>
                    <enumerator>FireAtEntity</enumerator>
                    <name>FireAtEntityProgress</name>
                    <dataType>FireAtProgress</dataType>
                    <semantics>Progress for FireAtEntity</semantics>
                </alternative>
                <alternative>
                    <enumerator>FireAtEntityWM</enumerator>
                    <name>FireAtEntityWMProgress</name>
                    <dataType>FireAtProgress</dataType>
                    <semantics>Progress for FireAtEntityWM</semantics>
                </alternative>
                <alternative>
                    <enumerator>FireAtLocation</enumerator>
                    <name>FireAtLocationProgress</name>
                    <dataType>FireAtProgress</dataType>
                    <semantics>Progress for FireAtLocation</semantics>
                </alternative>
                <alternative>
                    <enumerator>FireAtLocationWM</enumerator>
                    <name>FireAtLocationWMProgress</name>
                    <dataType>FireAtProgress</dataType>
                    <semantics>Progress for FireAtLocationWM</semantics>
                </alternative>
                <alternative>
                    <enumerator>Wait</enumerator>
                    <name>Wait</name>
                    <dataType>WaitProgress</dataType>
                    <semantics>Progress for wait task.</semantics>
                </alternative>
                <encoding>HLAvariantRecord</encoding>
                <semantics>Variant record for task progress data.</semantics>
            </variantRecordData>
            <variantRecordData>
                <name>WorldLocationVariantStruct</name>
                <discriminant>GeometryType</discriminant>
                <dataType>GeometryType</dataType>
                <alternative>
                    <enumerator>Point</enumerator>
                    <name>Point</name>
                    <dataType>WorldLocationStruct</dataType>
                    <semantics>A signle point represented as a WorldLocationStruct.</semantics>
                </alternative>
                <alternative>
                    <enumerator>Path</enumerator>
                    <name>Path</name>
                    <dataType>WorldLocationPath</dataType>
                    <semantics>A array representing a path given in WorldLocationStructs.</semantics>
                </alternative>
                <alternative>
                    <enumerator>Polygon</enumerator>
                    <name>Polygon</name>
                    <dataType>WorldLocationStructLengthlessArray</dataType>
                    <semantics>A polygon used to represent ArealObjects (NETN-SE)</semantics>
                </alternative>
                <encoding>HLAvariantRecord</encoding>
                <semantics>A point, path or area described in WorldLocationStructs (NETN-SE).</semantics>
            </variantRecordData>
            <variantRecordData>
                <name>TaskDefinitionVariantRecord</name>
                <discriminant>TaskType</discriminant>
                <dataType>TaskTypeEnum</dataType>
                <alternative>
                    <enumerator>ClearEngineering</enumerator>
                    <name>ClearEngineering</name>
                    <dataType>ClearEngineeringTaskDefinition</dataType>
                    <semantics>NETN-SE</semantics>
                </alternative>
                <alternative>
                    <enumerator>Engineering</enumerator>
                    <name>Engineering</name>
                    <dataType>EngineeringTaskDefinition</dataType>
                    <semantics>NETN-SE</semantics>
                </alternative>
                <alternative>
                    <enumerator>LayMinefield</enumerator>
                    <name>LayMinefield</name>
                    <dataType>CreateMinefieldTaskDefinition</dataType>
                    <semantics>NETN-SE</semantics>
                </alternative>
                <alternative>
                    <enumerator>CreateBreach</enumerator>
                    <name>CreateBreach</name>
                    <dataType>CreateBreachTaskDefinition</dataType>
                    <semantics>NETN-SE</semantics>
                </alternative>
                <alternative>
                    <enumerator>CreateCheckpoint</enumerator>
                    <name>CreateCheckpoint</name>
                    <dataType>CreateCheckpointTaskDefinition</dataType>
                    <semantics>NETN-SE</semantics>
                </alternative>
                <alternative>
                    <enumerator>Dismount</enumerator>
                    <name>Dismount</name>
                    <dataType>DismountTaskDefinition</dataType>
                    <semantics></semantics>
                </alternative>
                <alternative>
                    <enumerator>DisruptCommunication</enumerator>
                    <name>DisruptCommunication</name>
                    <dataType>DisruptCommunicationTaskDefinition</dataType>
                    <semantics></semantics>
                </alternative>
                <alternative>
                    <enumerator>FireAtEntity</enumerator>
                    <name>FireAtEntity</name>
                    <dataType>FireAtEntityTaskDefinition</dataType>
                    <semantics></semantics>
                </alternative>
                <alternative>
                    <enumerator>FireAtEntityWM</enumerator>
                    <name>FireAtENtityWM</name>
                    <dataType>FireAtEntityWMTaskDefinition</dataType>
                    <semantics></semantics>
                </alternative>
                <alternative>
                    <enumerator>FireAtLocation</enumerator>
                    <name>FireAtLocation</name>
                    <dataType>FireAtLocationTaskDefinition</dataType>
                    <semantics></semantics>
                </alternative>
                <alternative>
                    <enumerator>FireAtLocationWM</enumerator>
                    <name>FireAtLocationWM</name>
                    <dataType>FireAtLocationWMTaskDefinition</dataType>
                    <semantics></semantics>
                </alternative>
                <alternative>
                    <enumerator>FollowEntity</enumerator>
                    <name>FollowEntity</name>
                    <dataType>FollowTaskDefinition</dataType>
                    <semantics></semantics>
                </alternative>
                <alternative>
                    <enumerator>Move</enumerator>
                    <name>Move</name>
                    <dataType>MoveTaskDefinition</dataType>
                    <semantics></semantics>
                </alternative>
                <alternative>
                    <enumerator>MoveIntoFormation</enumerator>
                    <name>MoveIntoFormation</name>
                    <dataType>MoveIntoFormationTaskDefinition</dataType>
                    <semantics></semantics>
                </alternative>
                <alternative>
                    <enumerator>MoveToEntity</enumerator>
                    <name>MoveToEntity</name>
                    <dataType>MoveToEntity</dataType>
                    <semantics></semantics>
                </alternative>
                <alternative>
                    <enumerator>MoveToLocation</enumerator>
                    <name>MoveToLocation</name>
                    <dataType>MoveToLocationTaskDefinition</dataType>
                    <semantics></semantics>
                </alternative>
                <alternative>
                    <enumerator>MoveToLocationWithSpeed</enumerator>
                    <name>MoveToLocationWithSpeed</name>
                    <dataType>MoveToLocationWithSpeedTaskDefinition</dataType>
                    <semantics></semantics>
                </alternative>
                <alternative>
                    <enumerator>Mount</enumerator>
                    <name>Mount</name>
                    <dataType>MountTaskDefinition</dataType>
                    <semantics></semantics>
                </alternative>
                <alternative>
                    <enumerator>Observe</enumerator>
                    <name>Observe</name>
                    <dataType>ObserveTaskDefinition</dataType>
                    <semantics></semantics>
                </alternative>
                <alternative>
                    <enumerator>OperateCheckpoint</enumerator>
                    <name>OperateCheckpoint</name>
                    <dataType>OperateCheckpointTaskDefinition</dataType>
                    <semantics>NETN-SE</semantics>
                </alternative>
                <alternative>
                    <enumerator>Patrol</enumerator>
                    <name>Patrol</name>
                    <dataType>PatrolTaskDefinition</dataType>
                    <semantics></semantics>
                </alternative>
                <alternative>
                    <enumerator>PatrolRepeating</enumerator>
                    <name>PatrolRepeating</name>
                    <dataType>PatrolRepeatingTaskDefinition</dataType>
                    <semantics></semantics>
                </alternative>
                <alternative>
                    <enumerator>PatrolWithSpeed</enumerator>
                    <name>PatrolWithSpeed</name>
                    <dataType>PatrolWithSpeedTaskDefinition</dataType>
                    <semantics></semantics>
                </alternative>
                <alternative>
                    <enumerator>PatrolWithSpeedRepeating</enumerator>
                    <name>PatrolWithSpeed</name>
                    <dataType>PatrolRepeatingWithSpeedTaskDefinition</dataType>
                    <semantics></semantics>
                </alternative>
                <alternative>
                    <enumerator>SetOrderedAltitude</enumerator>
                    <name>SetOrderedAltitude</name>
                    <dataType>SetOrderedAltitudeTaskDefinition</dataType>
                    <semantics></semantics>
                </alternative>
                <alternative>
                    <enumerator>SetOrderedSpeed</enumerator>
                    <name>SetOrderedSpeed</name>
                    <dataType>SetOrderedSpeedTaskDefinition</dataType>
                    <semantics></semantics>
                </alternative>
                <alternative>
                    <enumerator>SetRulesOfEngagement</enumerator>
                    <name>SetRulesOfEngagement</name>
                    <dataType>SetRulesOfEngagementTaskDefinition</dataType>
                    <semantics></semantics>
                </alternative>
                <alternative>
                    <enumerator>SetTransmitterStatus</enumerator>
                    <name>SetTransmitterStatus</name>
                    <dataType>SetTransmitterStatusTaskDefinition</dataType>
                    <semantics></semantics>
                </alternative>
                <alternative>
                    <enumerator>StopAtSideOfRoad</enumerator>
                    <name>StopAtSideOfRoad</name>
                    <dataType>StopAtSideOfRoadTaskDefinition</dataType>
                    <semantics></semantics>
                </alternative>
                <alternative>
                    <enumerator>TurnToHeading</enumerator>
                    <name>TurnToHeading</name>
                    <dataType>TurnToHeadingTaskDefinition</dataType>
                    <semantics></semantics>
                </alternative>
                <alternative>
                    <enumerator>TurnToOrientation</enumerator>
                    <name>TurnToOrientation</name>
                    <dataType>TurnToOrientationTaskDefinition</dataType>
                    <semantics></semantics>
                </alternative>
                <alternative>
                    <enumerator>Wait</enumerator>
                    <name>Wait</name>
                    <dataType>WaitTaskDefinition</dataType>
                    <semantics></semantics>
                </alternative>
                <encoding>HLAvariantRecord</encoding>
                <semantics></semantics>
            </variantRecordData>
            <variantRecordData>
                <name>TaskProgressVariantRecord</name>
                <discriminant>TaskType</discriminant>
                <dataType>TaskTypeEnum</dataType>
                <alternative>
                    <enumerator>ClearEngineering</enumerator>
                    <name>ClearEngineering</name>
                    <dataType>ElapsedTimeProgress</dataType>
                    <semantics></semantics>
                </alternative>
                <alternative>
                    <enumerator>Engineering</enumerator>
                    <name>Engineering</name>
                    <dataType>ElapsedTimeProgress</dataType>
                    <semantics></semantics>
                </alternative>
                <alternative>
                    <enumerator>CreateBreach</enumerator>
                    <name>CreateBreach</name>
                    <dataType>ElapsedTimeProgress</dataType>
                    <semantics></semantics>
                </alternative>
                <alternative>
                    <enumerator>CreateCheckpoint</enumerator>
                    <name>CreateCheckpoint</name>
                    <dataType>ElapsedTimeProgress</dataType>
                    <semantics></semantics>
                </alternative>
                <alternative>
                    <enumerator>LayMinefield</enumerator>
                    <name>LayMinefield</name>
                    <dataType>ElapsedTimeProgress</dataType>
                    <semantics></semantics>
                </alternative>
                <alternative>
                    <enumerator>OperateCheckpoint</enumerator>
                    <name>OperateCheckpoint</name>
                    <dataType>ElapsedTimeProgress</dataType>
                    <semantics></semantics>
                </alternative>
                <alternative>
                    <enumerator>Wait</enumerator>
                    <name>Wait</name>
                    <dataType>ElapsedTimeProgress</dataType>
                    <semantics></semantics>
                </alternative>
                <alternative>
                    <enumerator>FollowEntity</enumerator>
                    <name>FollowEntity</name>
                    <dataType>ElapsedTimeProgress</dataType>
                    <semantics></semantics>
                </alternative>
                <alternative>
                    <enumerator>Move</enumerator>
                    <name>Move</name>
                    <dataType>ElapsedTimeProgress</dataType>
                    <semantics></semantics>
                </alternative>
                <alternative>
                    <enumerator>FireAtEntity</enumerator>
                    <name>FireAtEntity</name>
                    <dataType>FireAtTaskProgress</dataType>
                    <semantics></semantics>
                </alternative>
                <alternative>
                    <enumerator>FireAtEntityWM</enumerator>
                    <name>FireAtEntityWM</name>
                    <dataType>FireAtTaskProgress</dataType>
                    <semantics></semantics>
                </alternative>
                <alternative>
                    <enumerator>FireAtLocation</enumerator>
                    <name>FireAtLocation</name>
                    <dataType>FireAtTaskProgress</dataType>
                    <semantics></semantics>
                </alternative>
                <alternative>
                    <enumerator>FireAtLocationWM</enumerator>
                    <name>FireAtLocationWM</name>
                    <dataType>FireAtTaskProgress</dataType>
                    <semantics></semantics>
                </alternative>
                <alternative>
                    <enumerator>MoveToEntity</enumerator>
                    <name>MoveToEntity</name>
                    <dataType>MoveTaskProgress</dataType>
                    <semantics></semantics>
                </alternative>
                <alternative>
                    <enumerator>MoveToLocation</enumerator>
                    <name>MoveToLocation</name>
                    <dataType>MoveTaskProgress</dataType>
                    <semantics></semantics>
                </alternative>
                <alternative>
                    <enumerator>MoveToLocationWithSpeed</enumerator>
                    <name>MoveToLocationWithSpeed</name>
                    <dataType>MoveTaskDefinition</dataType>
                    <semantics></semantics>
                </alternative>
                <alternative>
                    <enumerator>Patrol</enumerator>
                    <name>Patrol</name>
                    <dataType>MoveTaskProgress</dataType>
                    <semantics></semantics>
                </alternative>
                <alternative>
                    <enumerator>InWeaponRangeReport</enumerator>
                    <name>PatrolWithSpeed</name>
                    <dataType>MoveTaskProgress</dataType>
                    <semantics></semantics>
                </alternative>
                <alternative>
                    <enumerator>PatrolRepeating</enumerator>
                    <name>PatrolRepeating</name>
                    <dataType>PatrolRepeatingProgress</dataType>
                    <semantics></semantics>
                </alternative>
                <alternative>
                    <enumerator>PatrolWithSpeedRepeating</enumerator>
                    <name>PatrolWithSpeedRepeating</name>
                    <dataType>PatrolRepeatingProgress</dataType>
                    <semantics></semantics>
                </alternative>
                <encoding>HLAvariantRecord</encoding>
                <semantics></semantics>
            </variantRecordData>
        </variantRecordDataTypes>
    </dataTypes>
    <notes>
        <note>
            <label>netn-etr_1</label>
            <semantics>The interaction classes are organized in a root class and four base classes: ETR_Task, ETR_Report, ETR_TaskManagement, and ETR_SimCon. 
 
* ETR_Root: root interaction class for the Entitiy Tasking and Reporting (ETR) interaction classes. 
* ETR_Task: A base interaction class for more specialized task interaction classes. 
* ETR_Report: A base interaction class for more specialized report interaction classes. 
* ETR_TaskManagement: A base interaction class for more specialized task management interaction classes. 
* ETR_SimCon: A base interaction class for more specialized Simulation Control (SimCon) interaction classes</semantics>
        </note>
        <note>
            <label>COPY-RPRnoteBase1</label>
            <semantics>Federates shall send the time at which the data is valid in the user defined tag with every attribute values update and interaction; see datatype RPRUserDefinedTag for the encoding. All federates shall transmit this field, even if they do not use it themselves, so that other federates can use its value to compensate for network transport delays.</semantics>
        </note>
    </notes>
</objectModel>
